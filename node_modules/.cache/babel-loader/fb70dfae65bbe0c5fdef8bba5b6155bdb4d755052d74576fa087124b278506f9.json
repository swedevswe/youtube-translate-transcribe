{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{PayPalButtons,PayPalScriptProvider}from'@paypal/react-paypal-js';import{franc}from'franc';import'./TranscriptForm.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TranscriptForm=()=>{const[url,setUrl]=useState('');const[message,setMessage]=useState('');const[transcript,setTranscript]=useState('');const[isPaymentReady,setIsPaymentReady]=useState(false);const[loading,setLoading]=useState(false);const[isNonEnglish,setIsNonEnglish]=useState(false);const[translate,setTranslate]=useState(false);const[translationError,setTranslationError]=useState(false);const[paymentError,setPaymentError]=useState(false);const[showGetTranscriptButton,setShowGetTranscriptButton]=useState(true);const[transcriptionStarted,setTranscriptionStarted]=useState(false);const handleUrlChange=e=>{setUrl(e.target.value);};const handleTranslateChange=async e=>{const isChecked=e.target.checked;setTranslate(isChecked);if(isChecked&&isNonEnglish&&transcript){try{setMessage(/*#__PURE__*/_jsx(\"div\",{className:\"message-container\",children:\"Translating transcript...\"}));const translatedTranscript=await translateTranscript(transcript);setTranscript(translatedTranscript);setMessage(/*#__PURE__*/_jsx(\"div\",{className:\"message-container\",children:\"Translation complete. Please make the payment to download.\"}));}catch(error){setMessage(/*#__PURE__*/_jsx(\"div\",{className:\"message-container\",children:\"Error translating transcript. You were not charged.\"}));}}else if(!isChecked&&isNonEnglish){setMessage(/*#__PURE__*/_jsxs(\"div\",{className:\"message-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Transcript available. This video is in a non-English language.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You can get the transcript in the original language\"}),/*#__PURE__*/_jsx(\"p\",{children:\"or translated to English for an extra fee.\"})]}));}};const handleSubmit=async e=>{e.preventDefault();if(transcriptionStarted)return;setLoading(true);setIsNonEnglish(false);setTranslationError(false);setPaymentError(false);setTranscriptionStarted(true);try{const videoId=extractVideoId(url);const audioBuffer=await fetchAudioStream(videoId);const generatedTranscript=await processAudioBuffer(audioBuffer,translate);const language=detectLanguage(generatedTranscript);if(language!=='en'){setIsNonEnglish(true);setMessage(/*#__PURE__*/_jsxs(\"div\",{className:\"message-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Transcript available. This video is in a non-English language.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You can get the transcript in the original language\"}),/*#__PURE__*/_jsx(\"p\",{children:\"or translated to English for an extra fee.\"})]}));}else{setMessage(/*#__PURE__*/_jsx(\"div\",{className:\"message-container\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Transcript available. Please make the payment to download.\"})}));}setTranscript(generatedTranscript);setIsPaymentReady(true);}catch(error){setMessage(/*#__PURE__*/_jsx(\"div\",{className:\"message-container\",children:error.message}));}finally{setLoading(false);setShowGetTranscriptButton(false);}};const extractVideoId=url=>{try{const urlObj=new URL(url);const videoId=urlObj.searchParams.get('v')||urlObj.pathname.split('/').pop();if(!videoId){throw new Error('Invalid YouTube URL');}return videoId;}catch(error){throw new Error('Invalid URL format');}};const fetchAudioStream=async videoId=>{try{const response=await axios.get(\"https://your-vercel-backend.vercel.app/api/get-audio-stream?videoId=\".concat(videoId),{responseType:'arraybuffer'});return response.data;}catch(error){throw new Error('Error fetching audio stream');}};const processAudioBuffer=async(audioBuffer,translate)=>{const formData=new FormData();formData.append('audio',new Blob([audioBuffer],{type:'audio/wav'}));formData.append('translate',translate?'true':'false');console.log('Sending form data with translate flag:',translate);const response=await axios.post('https://your-vercel-backend.vercel.app/transcribe',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.transcript;};const detectLanguage=text=>{const langCode=franc(text);const lang=iso6393to1[langCode]||'unknown';return lang;};const iso6393to1={'eng':'en','spa':'es','fra':'fr','hi':'hi','ur':'ur'};const handlePaymentSuccess=async()=>{console.log('Translate flag at payment success:',translate);if(isNonEnglish&&translate){try{const translatedTranscript=await translateTranscript(transcript);setTranscript(translatedTranscript);setMessage('Payment successful. Download your transcript below.');setIsPaymentReady(false);localStorage.setItem('transcript',translatedTranscript);}catch(error){setMessage('Error translating transcript. You were not charged.');}}else{setMessage('Payment successful. Download your transcript below.');setIsPaymentReady(false);localStorage.setItem('transcript',transcript);}};const translateTranscript=async text=>{try{const response=await axios.post('https://your-vercel-backend.vercel.app/api/translate',{text,translate:'true'},{headers:{'Content-Type':'application/json'}});return response.data.translatedText;}catch(error){throw new Error('Error translating transcript');}};const handlePaymentError=()=>{setMessage('An error occurred during payment. You were not charged.');};const handleGoBack=()=>{setUrl('');setMessage('');setTranscript('');setIsPaymentReady(false);setLoading(false);setIsNonEnglish(false);setTranslate(false);setShowGetTranscriptButton(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Please enter the YouTube URL:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:url,onChange:handleUrlChange,required:true})]}),showGetTranscriptButton&&/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Processing... Please wait..':'Get Transcript'}),isNonEnglish&&/*#__PURE__*/_jsxs(\"label\",{children:[\"Translate to English:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:translate,onChange:handleTranslateChange})]})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),isPaymentReady&&/*#__PURE__*/_jsx(PayPalScriptProvider,{options:{\"client-id\":process.env.REACT_APP_PAYPAL_CLIENT_ID},children:/*#__PURE__*/_jsx(PayPalButtons,{style:{layout:'vertical'},createOrder:(data,actions)=>{const amount=isNonEnglish?\"6.00\":\"4.00\";return actions.order.create({purchase_units:[{amount:{value:amount}}]});},onApprove:(data,actions)=>{return actions.order.capture().then(handlePaymentSuccess).catch(handlePaymentError);},onError:handlePaymentError})}),(paymentError||translationError)&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:message}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGoBack,children:\"Go Back\"})]}),message==='Payment successful. Download your transcript below.'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"a\",{className:\"download-button\",href:\"data:text/plain;charset=utf-8,\".concat(encodeURIComponent(transcript)),download:\"transcript.txt\",children:\"Download Transcript\"}),/*#__PURE__*/_jsx(\"button\",{className:\"go-back-button\",onClick:handleGoBack,children:\"Go Back\"})]})]});};export default TranscriptForm;","map":{"version":3,"names":["React","useState","axios","PayPalButtons","PayPalScriptProvider","franc","jsx","_jsx","jsxs","_jsxs","TranscriptForm","url","setUrl","message","setMessage","transcript","setTranscript","isPaymentReady","setIsPaymentReady","loading","setLoading","isNonEnglish","setIsNonEnglish","translate","setTranslate","translationError","setTranslationError","paymentError","setPaymentError","showGetTranscriptButton","setShowGetTranscriptButton","transcriptionStarted","setTranscriptionStarted","handleUrlChange","e","target","value","handleTranslateChange","isChecked","checked","className","children","translatedTranscript","translateTranscript","error","handleSubmit","preventDefault","videoId","extractVideoId","audioBuffer","fetchAudioStream","generatedTranscript","processAudioBuffer","language","detectLanguage","urlObj","URL","searchParams","get","pathname","split","pop","Error","response","concat","responseType","data","formData","FormData","append","Blob","type","console","log","post","headers","text","langCode","lang","iso6393to1","handlePaymentSuccess","localStorage","setItem","translatedText","handlePaymentError","handleGoBack","onSubmit","onChange","required","disabled","options","process","env","REACT_APP_PAYPAL_CLIENT_ID","style","layout","createOrder","actions","amount","order","create","purchase_units","onApprove","capture","then","catch","onError","onClick","href","encodeURIComponent","download"],"sources":["C:/Users/swths/OneDrive/Documents/youtube-transcriber/youtube-transcriber/client/src/components/TranscriptForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButtons, PayPalScriptProvider } from '@paypal/react-paypal-js';\r\nimport { franc } from 'franc';\r\nimport './TranscriptForm.css';\r\n\r\nconst TranscriptForm = () => {\r\n    const [url, setUrl] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [transcript, setTranscript] = useState('');\r\n    const [isPaymentReady, setIsPaymentReady] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isNonEnglish, setIsNonEnglish] = useState(false);\r\n    const [translate, setTranslate] = useState(false);\r\n    const [translationError, setTranslationError] = useState(false);\r\n    const [paymentError, setPaymentError] = useState(false);\r\n    const [showGetTranscriptButton, setShowGetTranscriptButton] = useState(true);\r\n    const [transcriptionStarted, setTranscriptionStarted] = useState(false);\r\n\r\n    const handleUrlChange = (e) => {\r\n        setUrl(e.target.value);\r\n    };\r\n\r\n    const handleTranslateChange = async (e) => {\r\n        const isChecked = e.target.checked;\r\n        setTranslate(isChecked);\r\n\r\n        if (isChecked && isNonEnglish && transcript) {\r\n            try {\r\n                setMessage(<div className=\"message-container\">Translating transcript...</div>);\r\n                const translatedTranscript = await translateTranscript(transcript);\r\n                setTranscript(translatedTranscript);\r\n                setMessage(<div className=\"message-container\">Translation complete. Please make the payment to download.</div>);\r\n            } catch (error) {\r\n                setMessage(<div className=\"message-container\">Error translating transcript. You were not charged.</div>);\r\n            }\r\n        } else if (!isChecked && isNonEnglish) {\r\n            setMessage(\r\n                <div className=\"message-container\">\r\n                    <p>Transcript available. This video is in a non-English language.</p>\r\n                    <p>You can get the transcript in the original language</p>\r\n                    <p>or translated to English for an extra fee.</p>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (transcriptionStarted) return;\r\n        setLoading(true);\r\n        setIsNonEnglish(false);\r\n        setTranslationError(false);\r\n        setPaymentError(false);\r\n        setTranscriptionStarted(true);\r\n\r\n        try {\r\n            const videoId = extractVideoId(url);\r\n            const audioBuffer = await fetchAudioStream(videoId);\r\n            const generatedTranscript = await processAudioBuffer(audioBuffer, translate);\r\n\r\n            const language = detectLanguage(generatedTranscript);\r\n            if (language !== 'en') {\r\n                setIsNonEnglish(true);\r\n                setMessage(\r\n                    <div className=\"message-container\">\r\n                        <p>Transcript available. This video is in a non-English language.</p>\r\n                        <p>You can get the transcript in the original language</p>\r\n                        <p>or translated to English for an extra fee.</p>\r\n                    </div>\r\n                );\r\n            } else {\r\n                setMessage(\r\n                <div className=\"message-container\">\r\n                    <p>Transcript available. Please make the payment to download.</p>\r\n                </div>\r\n                );\r\n            }\r\n\r\n            setTranscript(generatedTranscript);\r\n            setIsPaymentReady(true);\r\n        } catch (error) {\r\n            setMessage(<div className=\"message-container\">{error.message}</div>);\r\n        } finally {\r\n            setLoading(false);\r\n            setShowGetTranscriptButton(false);\r\n        }\r\n    };\r\n\r\n    const extractVideoId = (url) => {\r\n        try {\r\n            const urlObj = new URL(url);\r\n            const videoId = urlObj.searchParams.get('v') || urlObj.pathname.split('/').pop();\r\n            if (!videoId) {\r\n                throw new Error('Invalid YouTube URL');\r\n            }\r\n            return videoId;\r\n        } catch (error) {\r\n            throw new Error('Invalid URL format');\r\n        }\r\n    };\r\n\r\n    const fetchAudioStream = async (videoId) => {\r\n        try {\r\n            const response = await axios.get(`https://your-vercel-backend.vercel.app/api/get-audio-stream?videoId=${videoId}`, { responseType: 'arraybuffer' });\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new Error('Error fetching audio stream');\r\n        }\r\n    };\r\n\r\n    const processAudioBuffer = async (audioBuffer, translate) => {\r\n        const formData = new FormData();\r\n        formData.append('audio', new Blob([audioBuffer], { type: 'audio/wav' }));\r\n        formData.append('translate', translate ? 'true' : 'false');\r\n\r\n        console.log('Sending form data with translate flag:', translate);\r\n\r\n        const response = await axios.post('https://your-vercel-backend.vercel.app/transcribe', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n            },\r\n        });\r\n\r\n        return response.data.transcript;\r\n    };\r\n\r\n    const detectLanguage = (text) => {\r\n        const langCode = franc(text);\r\n        const lang = iso6393to1[langCode] || 'unknown';\r\n        return lang;\r\n    };\r\n\r\n    const iso6393to1 = {\r\n        'eng': 'en',\r\n        'spa': 'es',\r\n        'fra': 'fr',\r\n        'hi' : 'hi',\r\n        'ur' : 'ur'\r\n    };\r\n\r\n    const handlePaymentSuccess = async () => {\r\n        console.log('Translate flag at payment success:', translate);\r\n        if (isNonEnglish && translate) {\r\n            try {\r\n                const translatedTranscript = await translateTranscript(transcript);\r\n                setTranscript(translatedTranscript);\r\n                setMessage('Payment successful. Download your transcript below.');\r\n                setIsPaymentReady(false);\r\n                localStorage.setItem('transcript', translatedTranscript);\r\n            } catch (error) {\r\n                setMessage('Error translating transcript. You were not charged.');\r\n            }\r\n        } else {\r\n            setMessage('Payment successful. Download your transcript below.');\r\n            setIsPaymentReady(false);\r\n            localStorage.setItem('transcript', transcript);\r\n        }\r\n    };\r\n\r\n    const translateTranscript = async (text) => {\r\n        try {\r\n            const response = await axios.post('https://your-vercel-backend.vercel.app/api/translate', { text, translate: 'true' }, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            return response.data.translatedText;\r\n        } catch (error) {\r\n            throw new Error('Error translating transcript');\r\n        }\r\n    };\r\n\r\n    const handlePaymentError = () => {\r\n        setMessage('An error occurred during payment. You were not charged.');\r\n    };\r\n\r\n    const handleGoBack = () => {\r\n        setUrl('');\r\n        setMessage('');\r\n        setTranscript('');\r\n        setIsPaymentReady(false);\r\n        setLoading(false);\r\n        setIsNonEnglish(false);\r\n        setTranslate(false);\r\n        setShowGetTranscriptButton(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>\r\n                        Please enter the YouTube URL:\r\n                        <input type=\"text\" value={url} onChange={handleUrlChange} required />\r\n                    </label>\r\n                    {showGetTranscriptButton && (\r\n                        <button type=\"submit\" disabled={loading}>\r\n                            {loading ? 'Processing... Please wait..' : 'Get Transcript'}\r\n                        </button>\r\n                    )}\r\n                    {isNonEnglish && (\r\n                        <label>\r\n                            Translate to English:\r\n                            <input type=\"checkbox\" checked={translate} onChange={handleTranslateChange} />\r\n                        </label>\r\n                    )}\r\n                </form>\r\n                {message && <p>{message}</p>}\r\n                {isPaymentReady && (\r\n                    <PayPalScriptProvider options={{ \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID }}>\r\n                        <PayPalButtons\r\n                            style={{ layout: 'vertical' }}\r\n                            createOrder={(data, actions) => {\r\n                                const amount = isNonEnglish ? \"6.00\" : \"4.00\";\r\n                                return actions.order.create({\r\n                                    purchase_units: [{\r\n                                        amount: {\r\n                                            value: amount\r\n                                        }\r\n                                    }]\r\n                                });\r\n                            }}\r\n                            onApprove={(data, actions) => {\r\n                                return actions.order.capture().then(handlePaymentSuccess).catch(handlePaymentError);\r\n                            }}\r\n                            onError={handlePaymentError}\r\n                        />\r\n                    </PayPalScriptProvider>\r\n                )}\r\n                {(paymentError || translationError) && (\r\n                    <div>\r\n                        <p>{message}</p>\r\n                        <button onClick={handleGoBack}>Go Back</button>\r\n                    </div>\r\n                )}\r\n                {message === 'Payment successful. Download your transcript below.' && (\r\n                    <div>\r\n                        <a \r\n                            className=\"download-button\"\r\n                            href={`data:text/plain;charset=utf-8,${encodeURIComponent(transcript)}`}\r\n                            download=\"transcript.txt\"\r\n                        >\r\n                            Download Transcript\r\n                        </a>\r\n                        <button className=\"go-back-button\" onClick={handleGoBack}>Go Back</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default TranscriptForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}