{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{PayPalButtons,PayPalScriptProvider}from'@paypal/react-paypal-js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TranscriptForm=()=>{const[url,setUrl]=useState('');const[message,setMessage]=useState('');const[transcript,setTranscript]=useState('');const[isPaymentReady,setIsPaymentReady]=useState(false);const[loading,setLoading]=useState(false);const[translate,setTranslate]=useState(false);const handleUrlChange=e=>{setUrl(e.target.value);};const handleTranslateChange=e=>{setTranslate(e.target.checked);};const handleSubmit=async e=>{e.preventDefault();setMessage('Processing...');setLoading(true);try{const videoId=extractVideoId(url);const audioBuffer=await fetchAudioStream(videoId);const generatedTranscript=await processAudioBuffer(audioBuffer);if(translate){const translatedTranscript=await translateTranscript(generatedTranscript);setTranscript(translatedTranscript);}else{setTranscript(generatedTranscript);}setMessage('Transcript ready. Please make the payment to download.');setIsPaymentReady(true);}catch(error){setMessage(error.message);}finally{setLoading(false);}};const extractVideoId=url=>{try{const urlObj=new URL(url);const videoId=urlObj.searchParams.get('v')||urlObj.pathname.split('/').pop();if(!videoId){throw new Error('Invalid YouTube URL');}return videoId;}catch(error){throw new Error('Invalid URL format');}};const fetchAudioStream=async videoId=>{try{const response=await axios.get(\"http://localhost:5000/api/get-audio-stream?videoId=\".concat(videoId),{responseType:'arraybuffer'});const audioContext=new(window.AudioContext||window.webkitAudioContext)();const audioBuffer=await audioContext.decodeAudioData(response.data);return audioBuffer;}catch(error){throw new Error('Error fetching audio stream');}};const processAudioBuffer=async audioBuffer=>{// Placeholder for server-side processing or alternative library\nthrow new Error('Audio processing not implemented');};const translateTranscript=async text=>{try{const response=await axios.post(\"http://localhost:5000/api/translate\",{text});return response.data.translatedText;}catch(error){throw new Error('Error translating transcript');}};const handlePaymentSuccess=()=>{setMessage('Payment successful. Download your transcript below.');setIsPaymentReady(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"YouTube URL:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:url,onChange:handleUrlChange,required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Translate to English:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:translate,onChange:handleTranslateChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Processing...':'Get Transcript'})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),isPaymentReady&&/*#__PURE__*/_jsx(PayPalScriptProvider,{options:{\"client-id\":process.env.REACT_APP_PAYPAL_CLIENT_ID},children:/*#__PURE__*/_jsx(PayPalButtons,{style:{layout:'vertical'},createOrder:(data,actions)=>{const amount=translate?\"7.00\":\"5.00\";return actions.order.create({purchase_units:[{amount:{value:amount}}]});},onApprove:(data,actions)=>{return actions.order.capture().then(handlePaymentSuccess);}})}),message==='Payment successful. Download your transcript below.'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:transcript}),/*#__PURE__*/_jsx(\"a\",{href:\"data:text/plain;charset=utf-8,\".concat(encodeURIComponent(transcript)),download:\"transcript.txt\",children:\"Download Transcript\"})]})]});};export default TranscriptForm;","map":{"version":3,"names":["React","useState","axios","PayPalButtons","PayPalScriptProvider","jsx","_jsx","jsxs","_jsxs","TranscriptForm","url","setUrl","message","setMessage","transcript","setTranscript","isPaymentReady","setIsPaymentReady","loading","setLoading","translate","setTranslate","handleUrlChange","e","target","value","handleTranslateChange","checked","handleSubmit","preventDefault","videoId","extractVideoId","audioBuffer","fetchAudioStream","generatedTranscript","processAudioBuffer","translatedTranscript","translateTranscript","error","urlObj","URL","searchParams","get","pathname","split","pop","Error","response","concat","responseType","audioContext","window","AudioContext","webkitAudioContext","decodeAudioData","data","text","post","translatedText","handlePaymentSuccess","children","onSubmit","type","onChange","required","disabled","options","process","env","REACT_APP_PAYPAL_CLIENT_ID","style","layout","createOrder","actions","amount","order","create","purchase_units","onApprove","capture","then","href","encodeURIComponent","download"],"sources":["C:/Users/swths/OneDrive/Documents/youtube-transcriber/youtube-transcriber/client/src/components/TranscriptForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButtons, PayPalScriptProvider } from '@paypal/react-paypal-js';\r\n\r\nconst TranscriptForm = () => {\r\n    const [url, setUrl] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [transcript, setTranscript] = useState('');\r\n    const [isPaymentReady, setIsPaymentReady] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [translate, setTranslate] = useState(false);\r\n\r\n    const handleUrlChange = (e) => {\r\n        setUrl(e.target.value);\r\n    };\r\n\r\n    const handleTranslateChange = (e) => {\r\n        setTranslate(e.target.checked);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('Processing...');\r\n        setLoading(true);\r\n\r\n        try {\r\n            const videoId = extractVideoId(url);\r\n            const audioBuffer = await fetchAudioStream(videoId);\r\n            const generatedTranscript = await processAudioBuffer(audioBuffer);\r\n\r\n            if (translate) {\r\n                const translatedTranscript = await translateTranscript(generatedTranscript);\r\n                setTranscript(translatedTranscript);\r\n            } else {\r\n                setTranscript(generatedTranscript);\r\n            }\r\n\r\n            setMessage('Transcript ready. Please make the payment to download.');\r\n            setIsPaymentReady(true);\r\n        } catch (error) {\r\n            setMessage(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const extractVideoId = (url) => {\r\n        try {\r\n            const urlObj = new URL(url);\r\n            const videoId = urlObj.searchParams.get('v') || urlObj.pathname.split('/').pop();\r\n            if (!videoId) {\r\n                throw new Error('Invalid YouTube URL');\r\n            }\r\n            return videoId;\r\n        } catch (error) {\r\n            throw new Error('Invalid URL format');\r\n        }\r\n    };\r\n\r\n    const fetchAudioStream = async (videoId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:5000/api/get-audio-stream?videoId=${videoId}`, { responseType: 'arraybuffer' });\r\n            const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n            const audioBuffer = await audioContext.decodeAudioData(response.data);\r\n            return audioBuffer;\r\n        } catch (error) {\r\n            throw new Error('Error fetching audio stream');\r\n        }\r\n    };\r\n\r\n    const processAudioBuffer = async (audioBuffer) => {\r\n        // Placeholder for server-side processing or alternative library\r\n        throw new Error('Audio processing not implemented');\r\n    };\r\n\r\n    const translateTranscript = async (text) => {\r\n        try {\r\n            const response = await axios.post(`http://localhost:5000/api/translate`, { text });\r\n            return response.data.translatedText;\r\n        } catch (error) {\r\n            throw new Error('Error translating transcript');\r\n        }\r\n    };\r\n\r\n    const handlePaymentSuccess = () => {\r\n        setMessage('Payment successful. Download your transcript below.');\r\n        setIsPaymentReady(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    YouTube URL:\r\n                    <input type=\"text\" value={url} onChange={handleUrlChange} required />\r\n                </label>\r\n                <label>\r\n                    Translate to English:\r\n                    <input type=\"checkbox\" checked={translate} onChange={handleTranslateChange} />\r\n                </label>\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Processing...' : 'Get Transcript'}\r\n                </button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n            {isPaymentReady && (\r\n                <PayPalScriptProvider options={{ \"client-id\": process.env.REACT_APP_PAYPAL_CLIENT_ID }}>\r\n                    <PayPalButtons\r\n                        style={{ layout: 'vertical' }}\r\n                        createOrder={(data, actions) => {\r\n                            const amount = translate ? \"7.00\" : \"5.00\";\r\n                            return actions.order.create({\r\n                                purchase_units: [{\r\n                                    amount: {\r\n                                        value: amount\r\n                                    }\r\n                                }]\r\n                            });\r\n                        }}\r\n                        onApprove={(data, actions) => {\r\n                            return actions.order.capture().then(handlePaymentSuccess);\r\n                        }}\r\n                    />\r\n                </PayPalScriptProvider>\r\n            )}\r\n            {message === 'Payment successful. Download your transcript below.' && (\r\n                <div>\r\n                    <p>{transcript}</p>\r\n                    <a\r\n                        href={`data:text/plain;charset=utf-8,${encodeURIComponent(transcript)}`}\r\n                        download=\"transcript.txt\"\r\n                    >\r\n                        Download Transcript\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TranscriptForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}