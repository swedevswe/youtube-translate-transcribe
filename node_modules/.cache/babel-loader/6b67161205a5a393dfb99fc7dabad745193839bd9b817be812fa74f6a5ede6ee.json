{"ast":null,"code":"/*   Guess the natural language of a text\n *   Copyright (c) 2012, Rich Tibbett\n *   http://github.com/richtr/guessLanguage.js/\n *\n *   Original Python package:\n *   Copyright (c) 2008, Kent S Johnson\n *   http://code.google.com/p/guess-language/\n *\n *   Original C++ version for KDE:\n *   Copyright (c) 2006 Jacob R Rideout <kde@jacobrideout.net>\n *   http://websvn.kde.org/branches/work/sonnet-refactoring/common/nlp/guesslanguage.cpp?view=markup\n *\n *   Original Language::Guess Perl module:\n *   Copyright (c) 2004-2006 Maciej Ceglowski\n *   http://web.archive.org/web/20090228163219/http://languid.cantbedone.org/\n *\n *   Note: Language::Guess is GPL-licensed. KDE developers received permission\n *   from the author to distribute their port under LGPL:\n *   http://lists.kde.org/?l=kde-sonnet&m=116910092228811&w=2\n *\n *   This program is free software: you can redistribute it and/or modify it\n *   under the terms of the GNU Lesser General Public License as published\n *   by the Free Software Foundation, either version 3 of the License,\n *   or (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty\n *   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *   See the GNU Lesser General Public License for more details.\n *\n *   You should have received a copy of the GNU Lesser General Public License\n *   along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function (global, undefined) {\n  var guessLanguage = function () {\n    var models = global._languageData || {};\n    if (typeof module === \"object\" && module.exports === global) {\n      models = require('./_languageData') || {};\n    }\n    var MAX_LENGTH = 4096;\n    var MIN_LENGTH = 20;\n    var MAX_GRAMS = 300;\n    var NAME_MAP = {\n      \"ab\": \"Abkhazian\",\n      \"af\": \"Afrikaans\",\n      \"ar\": \"Arabic\",\n      \"az\": \"Azeri\",\n      \"be\": \"Belarusian\",\n      \"bg\": \"Bulgarian\",\n      \"bn\": \"Bengali\",\n      \"bo\": \"Tibetan\",\n      \"br\": \"Breton\",\n      \"ca\": \"Catalan\",\n      \"ceb\": \"Cebuano\",\n      \"cs\": \"Czech\",\n      \"cy\": \"Welsh\",\n      \"da\": \"Danish\",\n      \"de\": \"German\",\n      \"el\": \"Greek\",\n      \"en\": \"English\",\n      \"eo\": \"Esperanto\",\n      \"es\": \"Spanish\",\n      \"et\": \"Estonian\",\n      \"eu\": \"Basque\",\n      \"fa\": \"Farsi\",\n      \"fi\": \"Finnish\",\n      \"fo\": \"Faroese\",\n      \"fr\": \"French\",\n      \"fy\": \"Frisian\",\n      \"gd\": \"Scots Gaelic\",\n      \"gl\": \"Galician\",\n      \"gu\": \"Gujarati\",\n      \"ha\": \"Hausa\",\n      \"haw\": \"Hawaiian\",\n      \"he\": \"Hebrew\",\n      \"hi\": \"Hindi\",\n      \"hr\": \"Croatian\",\n      \"hu\": \"Hungarian\",\n      \"hy\": \"Armenian\",\n      \"id\": \"Indonesian\",\n      \"is\": \"Icelandic\",\n      \"it\": \"Italian\",\n      \"ja\": \"Japanese\",\n      \"ka\": \"Georgian\",\n      \"kk\": \"Kazakh\",\n      \"km\": \"Cambodian\",\n      \"ko\": \"Korean\",\n      \"ku\": \"Kurdish\",\n      \"ky\": \"Kyrgyz\",\n      \"la\": \"Latin\",\n      \"lt\": \"Lithuanian\",\n      \"lv\": \"Latvian\",\n      \"mg\": \"Malagasy\",\n      \"mk\": \"Macedonian\",\n      \"ml\": \"Malayalam\",\n      \"mn\": \"Mongolian\",\n      \"mr\": \"Marathi\",\n      \"ms\": \"Malay\",\n      \"nd\": \"Ndebele\",\n      \"ne\": \"Nepali\",\n      \"nl\": \"Dutch\",\n      \"nn\": \"Nynorsk\",\n      \"no\": \"Norwegian\",\n      \"nso\": \"Sepedi\",\n      \"pa\": \"Punjabi\",\n      \"pl\": \"Polish\",\n      \"ps\": \"Pashto\",\n      \"pt\": \"Portuguese\",\n      \"pt_PT\": \"Portuguese (Portugal)\",\n      \"pt_BR\": \"Portuguese (Brazil)\",\n      \"ro\": \"Romanian\",\n      \"ru\": \"Russian\",\n      \"sa\": \"Sanskrit\",\n      \"sh\": \"Serbo-Croatian\",\n      \"sk\": \"Slovak\",\n      \"sl\": \"Slovene\",\n      \"so\": \"Somali\",\n      \"sq\": \"Albanian\",\n      \"sr\": \"Serbian\",\n      \"sv\": \"Swedish\",\n      \"sw\": \"Swahili\",\n      \"ta\": \"Tamil\",\n      \"te\": \"Telugu\",\n      \"th\": \"Thai\",\n      \"tl\": \"Tagalog\",\n      \"tlh\": \"Klingon\",\n      \"tn\": \"Setswana\",\n      \"tr\": \"Turkish\",\n      \"ts\": \"Tsonga\",\n      \"tw\": \"Twi\",\n      \"uk\": \"Ukrainian\",\n      \"ur\": \"Urdu\",\n      \"uz\": \"Uzbek\",\n      \"ve\": \"Venda\",\n      \"vi\": \"Vietnamese\",\n      \"xh\": \"Xhosa\",\n      \"zh\": \"Chinese\",\n      \"zh_TW\": \"Traditional Chinese (Taiwan)\",\n      \"zu\": \"Zulu\"\n    };\n    var IANA_MAP = {\n      \"ab\": 12026,\n      \"af\": 40,\n      \"ar\": 26020,\n      \"az\": 26030,\n      \"be\": 11890,\n      \"bg\": 26050,\n      \"bn\": 26040,\n      \"bo\": 26601,\n      \"br\": 1361,\n      \"ca\": 3,\n      \"ceb\": 26060,\n      \"cs\": 26080,\n      \"cy\": 26560,\n      \"da\": 26090,\n      \"de\": 26160,\n      \"el\": 26165,\n      \"en\": 26110,\n      \"eo\": 11933,\n      \"es\": 26460,\n      \"et\": 26120,\n      \"eu\": 1232,\n      \"fa\": 26130,\n      \"fi\": 26140,\n      \"fo\": 11817,\n      \"fr\": 26150,\n      \"fy\": 1353,\n      \"gd\": 65555,\n      \"gl\": 1252,\n      \"gu\": 26599,\n      \"ha\": 26170,\n      \"haw\": 26180,\n      \"he\": 26592,\n      \"hi\": 26190,\n      \"hr\": 26070,\n      \"hu\": 26200,\n      \"hy\": 26597,\n      \"id\": 26220,\n      \"is\": 26210,\n      \"it\": 26230,\n      \"ja\": 26235,\n      \"ka\": 26600,\n      \"kk\": 26240,\n      \"km\": 1222,\n      \"ko\": 26255,\n      \"ku\": 11815,\n      \"ky\": 26260,\n      \"la\": 26280,\n      \"lt\": 26300,\n      \"lv\": 26290,\n      \"mg\": 1362,\n      \"mk\": 26310,\n      \"ml\": 26598,\n      \"mn\": 26320,\n      \"mr\": 1201,\n      \"ms\": 1147,\n      \"ne\": 26330,\n      \"nl\": 26100,\n      \"nn\": 172,\n      \"no\": 26340,\n      \"pa\": 65550,\n      \"pl\": 26380,\n      \"ps\": 26350,\n      \"pt\": 26390,\n      \"ro\": 26400,\n      \"ru\": 26410,\n      \"sa\": 1500,\n      \"sh\": 1399,\n      \"sk\": 26430,\n      \"sl\": 26440,\n      \"so\": 26450,\n      \"sq\": 26010,\n      \"sr\": 26420,\n      \"sv\": 26480,\n      \"sw\": 26470,\n      \"ta\": 26595,\n      \"te\": 26596,\n      \"th\": 26594,\n      \"tl\": 26490,\n      \"tlh\": 26250,\n      \"tn\": 65578,\n      \"tr\": 26500,\n      \"tw\": 1499,\n      \"uk\": 26520,\n      \"ur\": 26530,\n      \"uz\": 26540,\n      \"vi\": 26550,\n      \"zh\": 26065,\n      \"zh_TW\": 22\n    };\n    var SINGLETONS = [[\"Armenian\", \"hy\"], [\"Hebrew\", \"he\"], [\"Bengali\", \"bn\"], [\"Gurmukhi\", \"pa\"], [\"Greek\", \"el\"], [\"Gujarati\", \"gu\"], [\"Oriya\", \"or\"], [\"Tamil\", \"ta\"], [\"Telugu\", \"te\"], [\"Kannada\", \"kn\"], [\"Malayalam\", \"ml\"], [\"Sinhala\", \"si\"], [\"Thai\", \"th\"], [\"Lao\", \"lo\"], [\"Tibetan\", \"bo\"], [\"Burmese\", \"my\"], [\"Georgian\", \"ka\"], [\"Mongolian\", \"mn\"], [\"Khmer\", \"km\"]];\n    var UNKNOWN = 'unknown';\n    var BASIC_LATIN = [\"en\", \"ceb\", \"ha\", \"so\", \"tlh\", \"id\", \"haw\", \"la\", \"sw\", \"eu\", \"nr\", \"nso\", \"zu\", \"xh\", \"ss\", \"st\", \"tn\", \"ts\"];\n    var EXTENDED_LATIN = [\"cs\", \"af\", \"pl\", \"hr\", \"ro\", \"sk\", \"sl\", \"tr\", \"hu\", \"az\", \"et\", \"sq\", \"ca\", \"es\", \"fr\", \"de\", \"nl\", \"it\", \"da\", \"is\", \"no\", \"sv\", \"fi\", \"lv\", \"pt\", \"ve\", \"lt\", \"tl\", \"cy\", \"vi\"];\n    var ALL_LATIN = BASIC_LATIN.concat(EXTENDED_LATIN);\n    var CYRILLIC = [\"ru\", \"uk\", \"kk\", \"uz\", \"mn\", \"sr\", \"mk\", \"bg\", \"ky\"];\n    var ARABIC = [\"ar\", \"fa\", \"ps\", \"ur\"];\n    var DEVANAGARI = [\"hi\", \"ne\"];\n    var PT = [\"pt_BR\", \"pt_PT\"];\n\n    // Unicode char greedy regex block range matchers\n    var unicodeBlockTests = {\n      \"Basic Latin\": /[\\u0000-\\u007F]/g,\n      \"Latin-1 Supplement\": /[\\u0080-\\u00FF]/g,\n      \"Latin Extended-A\": /[\\u0100-\\u017F]/g,\n      \"Latin Extended-B\": /[\\u0180-\\u024F]/g,\n      \"IPA Extensions\": /[\\u0250-\\u02AF]/g,\n      \"Spacing Modifier Letters\": /[\\u02B0-\\u02FF]/g,\n      \"Combining Diacritical Marks\": /[\\u0300-\\u036F]/g,\n      \"Greek and Coptic\": /[\\u0370-\\u03FF]/g,\n      \"Cyrillic\": /[\\u0400-\\u04FF]/g,\n      \"Cyrillic Supplement\": /[\\u0500-\\u052F]/g,\n      \"Armenian\": /[\\u0530-\\u058F]/g,\n      \"Hebrew\": /[\\u0590-\\u05FF]/g,\n      \"Arabic\": /[\\u0600-\\u06FF]/g,\n      \"Syriac\": /[\\u0700-\\u074F]/g,\n      \"Arabic Supplement\": /[\\u0750-\\u077F]/g,\n      \"Thaana\": /[\\u0780-\\u07BF]/g,\n      \"NKo\": /[\\u07C0-\\u07FF]/g,\n      \"Devanagari\": /[\\u0900-\\u097F]/g,\n      \"Bengali\": /[\\u0980-\\u09FF]/g,\n      \"Gurmukhi\": /[\\u0A00-\\u0A7F]/g,\n      \"Gujarati\": /[\\u0A80-\\u0AFF]/g,\n      \"Oriya\": /[\\u0B00-\\u0B7F]/g,\n      \"Tamil\": /[\\u0B80-\\u0BFF]/g,\n      \"Telugu\": /[\\u0C00-\\u0C7F]/g,\n      \"Kannada\": /[\\u0C80-\\u0CFF]/g,\n      \"Malayalam\": /[\\u0D00-\\u0D7F]/g,\n      \"Sinhala\": /[\\u0D80-\\u0DFF]/g,\n      \"Thai\": /[\\u0E00-\\u0E7F]/g,\n      \"Lao\": /[\\u0E80-\\u0EFF]/g,\n      \"Tibetan\": /[\\u0F00-\\u0FFF]/g,\n      \"Myanmar\": /[\\u1000-\\u109F]/g,\n      \"Georgian\": /[\\u10A0-\\u10FF]/g,\n      \"Hangul Jamo\": /[\\u1100-\\u11FF]/g,\n      \"Ethiopic\": /[\\u1200-\\u137F]/g,\n      \"Ethiopic Supplement\": /[\\u1380-\\u139F]/g,\n      \"Cherokee\": /[\\u13A0-\\u13FF]/g,\n      \"Unified Canadian Aboriginal Syllabics\": /[\\u1400-\\u167F]/g,\n      \"Ogham\": /[\\u1680-\\u169F]/g,\n      \"Runic\": /[\\u16A0-\\u16FF]/g,\n      \"Tagalog\": /[\\u1700-\\u171F]/g,\n      \"Hanunoo\": /[\\u1720-\\u173F]/g,\n      \"Buhid\": /[\\u1740-\\u175F]/g,\n      \"Tagbanwa\": /[\\u1760-\\u177F]/g,\n      \"Khmer\": /[\\u1780-\\u17FF]/g,\n      \"Mongolian\": /[\\u1800-\\u18AF]/g,\n      \"Limbu\": /[\\u1900-\\u194F]/g,\n      \"Tai Le\": /[\\u1950-\\u197F]/g,\n      \"New Tai Lue\": /[\\u1980-\\u19DF]/g,\n      \"Khmer Symbols\": /[\\u19E0-\\u19FF]/g,\n      \"Buginese\": /[\\u1A00-\\u1A1F]/g,\n      \"Balinese\": /[\\u1B00-\\u1B7F]/g,\n      \"Phonetic Extensions\": /[\\u1D00-\\u1D7F]/g,\n      \"Phonetic Extensions Supplement\": /[\\u1D80-\\u1DBF]/g,\n      \"Combining Diacritical Marks Supplement\": /[\\u1DC0-\\u1DFF]/g,\n      \"Latin Extended Additional\": /[\\u1E00-\\u1EFF]/g,\n      \"Greek Extended\": /[\\u1F00-\\u1FFF]/g,\n      \"General Punctuation\": /[\\u2000-\\u206F]/g,\n      \"Superscripts and Subscripts\": /[\\u2070-\\u209F]/g,\n      \"Currency Symbols\": /[\\u20A0-\\u20CF]/g,\n      \"Combining Diacritical Marks for Symbols\": /[\\u20D0-\\u20FF]/g,\n      \"Letterlike Symbols\": /[\\u2100-\\u214F]/g,\n      \"Number Forms\": /[\\u2150-\\u218F]/g,\n      \"Arrows\": /[\\u2190-\\u21FF]/g,\n      \"Mathematical Operators\": /[\\u2200-\\u22FF]/g,\n      \"Miscellaneous Technical\": /[\\u2300-\\u23FF]/g,\n      \"Control Pictures\": /[\\u2400-\\u243F]/g,\n      \"Optical Character Recognition\": /[\\u2440-\\u245F]/g,\n      \"Enclosed Alphanumerics\": /[\\u2460-\\u24FF]/g,\n      \"Box Drawing\": /[\\u2500-\\u257F]/g,\n      \"Block Elements\": /[\\u2580-\\u259F]/g,\n      \"Geometric Shapes\": /[\\u25A0-\\u25FF]/g,\n      \"Miscellaneous Symbols\": /[\\u2600-\\u26FF]/g,\n      \"Dingbats\": /[\\u2700-\\u27BF]/g,\n      \"Miscellaneous Mathematical Symbols-A\": /[\\u27C0-\\u27EF]/g,\n      \"Supplemental Arrows-A\": /[\\u27F0-\\u27FF]/g,\n      \"Braille Patterns\": /[\\u2800-\\u28FF]/g,\n      \"Supplemental Arrows-B\": /[\\u2900-\\u297F]/g,\n      \"Miscellaneous Mathematical Symbols-B\": /[\\u2980-\\u29FF]/g,\n      \"Supplemental Mathematical Operators\": /[\\u2A00-\\u2AFF]/g,\n      \"Miscellaneous Symbols and Arrows\": /[\\u2B00-\\u2BFF]/g,\n      \"Glagolitic\": /[\\u2C00-\\u2C5F]/g,\n      \"Latin Extended-C\": /[\\u2C60-\\u2C7F]/g,\n      \"Coptic\": /[\\u2C80-\\u2CFF]/g,\n      \"Georgian Supplement\": /[\\u2D00-\\u2D2F]/g,\n      \"Tifinagh\": /[\\u2D30-\\u2D7F]/g,\n      \"Ethiopic Extended\": /[\\u2D80-\\u2DDF]/g,\n      \"Supplemental Punctuation\": /[\\u2E00-\\u2E7F]/g,\n      \"CJK Radicals Supplement\": /[\\u2E80-\\u2EFF]/g,\n      \"KangXi Radicals\": /[\\u2F00-\\u2FDF]/g,\n      \"Ideographic Description Characters\": /[\\u2FF0-\\u2FFF]/g,\n      \"CJK Symbols and Punctuation\": /[\\u3000-\\u303F]/g,\n      \"Hiragana\": /[\\u3040-\\u309F]/g,\n      \"Katakana\": /[\\u30A0-\\u30FF]/g,\n      \"Bopomofo\": /[\\u3100-\\u312F]/g,\n      \"Hangul Compatibility Jamo\": /[\\u3130-\\u318F]/g,\n      \"Kanbun\": /[\\u3190-\\u319F]/g,\n      \"Bopomofo Extended\": /[\\u31A0-\\u31BF]/g,\n      \"CJK Strokes\": /[\\u31C0-\\u31EF]/g,\n      \"Katakana Phonetic Extensions\": /[\\u31F0-\\u31FF]/g,\n      \"Enclosed CJK Letters and Months\": /[\\u3200-\\u32FF]/g,\n      \"CJK Compatibility\": /[\\u3300-\\u33FF]/g,\n      \"CJK Unified Ideographs Extension A\": /[\\u3400-\\u4DBF]/g,\n      \"Yijing Hexagram Symbols\": /[\\u4DC0-\\u4DFF]/g,\n      \"CJK Unified Ideographs\": /[\\u4E00-\\u9FFF]/g,\n      \"Yi Syllables\": /[\\uA000-\\uA48F]/g,\n      \"Yi Radicals\": /[\\uA490-\\uA4CF]/g,\n      \"Modifier Tone Letters\": /[\\uA700-\\uA71F]/g,\n      \"Latin Extended-D\": /[\\uA720-\\uA7FF]/g,\n      \"Syloti Nagri\": /[\\uA800-\\uA82F]/g,\n      \"Phags-pa\": /[\\uA840-\\uA87F]/g,\n      \"Hangul Syllables\": /[\\uAC00-\\uD7AF]/g,\n      \"High Surrogates\": /[\\uD800-\\uDB7F]/g,\n      \"High Private Use Surrogates\": /[\\uDB80-\\uDBFF]/g,\n      \"Low Surrogates\": /[\\uDC00-\\uDFFF]/g,\n      \"Private Use Area\": /[\\uE000-\\uF8FF]/g,\n      \"CJK Compatibility Ideographs\": /[\\uF900-\\uFAFF]/g,\n      \"Alphabetic Presentation Forms\": /[\\uFB00-\\uFB4F]/g,\n      \"Arabic Presentation Forms-A\": /[\\uFB50-\\uFDFF]/g,\n      \"Variation Selectors\": /[\\uFE00-\\uFE0F]/g,\n      \"Vertical Forms\": /[\\uFE10-\\uFE1F]/g,\n      \"Combining Half Marks\": /[\\uFE20-\\uFE2F]/g,\n      \"CJK Compatibility Forms\": /[\\uFE30-\\uFE4F]/g,\n      \"Small Form Variants\": /[\\uFE50-\\uFE6F]/g,\n      \"Arabic Presentation Forms-B\": /[\\uFE70-\\uFEFF]/g,\n      \"Halfwidth and Fullwidth Forms\": /[\\uFF00-\\uFFEF]/g,\n      \"Specials\": /[\\uFFF0-\\uFFFF]/g /*,\n                                     \"Linear B Syllabary\": /[\\u10000-\\u1007F]/g,\n                                     \"Linear B Ideograms\": /[\\u10080-\\u100FF]/g,\n                                     \"Aegean Numbers\": /[\\u10100-\\u1013F]/g,\n                                     \"Ancient Greek Numbers\": /[\\u10140-\\u1018F]/g,\n                                     \"Old Italic\": /[\\u10300-\\u1032F]/g,\n                                     \"Gothic\": /[\\u10330-\\u1034F]/g,\n                                     \"Ugaritic\": /[\\u10380-\\u1039F]/g,\n                                     \"Old Persian\": /[\\u103A0-\\u103DF]/g,\n                                     \"Deseret\": /[\\u10400-\\u1044F]/g,\n                                     \"Shavian\": /[\\u10450-\\u1047F]/g,\n                                     \"Osmanya\": /[\\u10480-\\u104AF]/g,\n                                     \"Cypriot Syllabary\": /[\\u10800-\\u1083F]/g,\n                                     \"Phoenician\": /[\\u10900-\\u1091F]/g,\n                                     \"Kharoshthi\": /[\\u10A00-\\u10A5F]/g,\n                                     \"Cuneiform\": /[\\u12000-\\u123FF]/g,\n                                     \"Cuneiform Numbers and Punctuation\": /[\\u12400-\\u1247F]/g,\n                                     \"Byzantine Musical Symbols\": /[\\u1D000-\\u1D0FF]/g,\n                                     \"Musical Symbols\": /[\\u1D100-\\u1D1FF]/g,\n                                     \"Ancient Greek Musical Notation\": /[\\u1D200-\\u1D24F]/g,\n                                     \"Tai Xuan Jing Symbols\": /[\\u1D300-\\u1D35F]/g,\n                                     \"Counting Rod Numerals\": /[\\u1D360-\\u1D37F]/g,\n                                     \"Mathematical Alphanumeric Symbols\": /[\\u1D400-\\u1D7FF]/g,\n                                     \"CJK Unified Ideographs Extension B\": /[\\u20000-\\u2A6DF]/g,\n                                     \"CJK Compatibility Ideographs Supplement\": /[\\u2F800-\\u2FA1F]/g,\n                                     \"Tags\": /[\\uE0000-\\uE007F]/g,\n                                     \"Variation Selectors Supplement\": /[\\uE0100-\\uE01EF]/g,\n                                     \"Supplementary Private Use Area-A\": /[\\uF0000-\\uFFFFF]/g,\n                                     \"Supplementary Private Use Area-B\": /[\\u100000-\\u10FFFF]/g*/\n    };\n    function findRuns(text) {\n      var relevant_runs = {};\n      for (var key in unicodeBlockTests) {\n        // Count the number of characters in each character block.\n        var charCount = text.match(unicodeBlockTests[key]);\n\n        // return run types that used for 40% or more of the string\n        // always return basic latin if found more than 15%\n        // and extended additional latin if over 10% (for Vietnamese)\n        var pct = (charCount ? charCount.length : 0) / text.length;\n        relevant_runs[key] = pct;\n      }\n      return relevant_runs;\n    }\n    function identify(text, callback) {\n      var scripts = findRuns(text);\n\n      // Identify the language.\n      if (scripts[\"Hangul Syllables\"] + scripts[\"Hangul Jamo\"] + scripts[\"Hangul Compatibility Jamo\"] >= 0.4) {\n        callback.apply(undefined, [\"ko\"]);\n        return;\n      }\n      if (scripts[\"Greek and Coptic\"] >= 0.4) {\n        callback.apply(undefined, [\"el\"]);\n        return;\n      }\n      if (scripts[\"Hiragana\"] + scripts[\"Katakana\"] + scripts[\"Katakana Phonetic Extensions\"] >= 0.2) {\n        callback.apply(undefined, [\"ja\"]);\n        return;\n      }\n      if (scripts[\"CJK Unified Ideographs\"] + scripts[\"Bopomofo\"] + scripts[\"Bopomofo Extended\"] + scripts[\"KangXi Radicals\"] >= 0.4) {\n        callback.apply(undefined, [\"zh\"]);\n        return;\n      }\n      if (scripts[\"Cyrillic\"] >= 0.4) {\n        check(text, CYRILLIC, callback);\n        return;\n      }\n      if (scripts[\"Arabic\"] + scripts[\"Arabic Presentation Forms-A\"] + scripts[\"Arabic Presentation Forms-B\"] >= 0.4) {\n        check(text, ARABIC, callback);\n        return;\n      }\n      if (scripts[\"Devanagari\"] >= 0.4) {\n        check(text, DEVANAGARI, callback);\n        return;\n      }\n\n      // Try languages with unique scripts\n      for (var i = 0, l = SINGLETONS.length; i < l; i++) {\n        if (scripts[SINGLETONS[i][0]] >= 0.4) {\n          callback.apply(undefined, [SINGLETONS[i][1]]);\n          return;\n        }\n      }\n\n      // Extended Latin\n      if (scripts[\"Latin-1 Supplement\"] + scripts[\"Latin Extended-A\"] + scripts[\"IPA Extensions\"] >= 0.4) {\n        check(text, EXTENDED_LATIN, function (latin_lang) {\n          if (latin_lang == \"pt\") {\n            check(text, PT, callback);\n          } else {\n            callback.apply(undefined, [latin_lang]);\n          }\n        });\n        return;\n      }\n      if (scripts[\"Basic Latin\"] >= 0.15) {\n        check(text, ALL_LATIN, callback);\n        return;\n      }\n      callback.apply(undefined, [UNKNOWN]);\n      // return;\n    }\n    function check(sample, langs, callback) {\n      if (sample.length < MIN_LENGTH) {\n        callback.apply(undefined, [UNKNOWN]);\n        return;\n      }\n      var scores = {};\n      var model = createOrderedModel(sample);\n      for (var i = 0, l = langs.length; i < l; i++) {\n        var lkey = langs[i].toLowerCase();\n        var known_model = models[lkey] || null;\n        if (!known_model) {\n          continue;\n        }\n        scores[lkey] = distance(model, known_model);\n      }\n      var scoresArr = [];\n      for (var index in scores) {\n        scoresArr.push([index, scores[index]]);\n      }\n      if (scoresArr.length == 0) {\n        callback.apply(undefined, [UNKNOWN]);\n        return;\n      }\n\n      // we want the lowest score, less distance = greater chance of match\n      var sortedScores = scoresArr.sort(function (objA, objB) {\n        return objA[1] - objB[1]; // sort low-to-high\n      });\n\n      // return the best match we've now calculated\n      callback.apply(undefined, [sortedScores[0][0]]);\n      //return;\n    }\n    function createOrderedModel(content) {\n      // Create a list of trigrams in content sorted by frequency.\n      var trigrams = {},\n        sortedTrigrams = [];\n      var content = content.toLowerCase();\n      var contentArr = content.split(\"\");\n      for (var i = 0, l = contentArr.length - 2; i < l; i++) {\n        var trigramKey = contentArr[i] + contentArr[i + 1] + contentArr[i + 2] + \"\";\n        if (!trigrams[trigramKey]) {\n          trigrams[trigramKey] = 1;\n        } else {\n          trigrams[trigramKey] += 1;\n        }\n      }\n\n      // convert object to array\n      for (var i in trigrams) {\n        sortedTrigrams[sortedTrigrams.length] = [i, trigrams[i]];\n      }\n\n      // sort array results\n      return sortedTrigrams.sort(function (objA, objB) {\n        return objB[1] - objA[1]; // sort high-to-low\n      });\n    }\n    function distance(model, known_model) {\n      // Calculate the distance to the known model.\n      var dist = 0;\n      for (var i = 0, l = model.length; i < l; i++) {\n        if (known_model[model[i][0]]) {\n          dist += Math.abs(model[i][1] - known_model[model[i][0]]);\n        } else {\n          dist += MAX_GRAMS;\n        }\n      }\n      return dist;\n    }\n    return {\n      detect: function (text, callback) {\n        // Return the ISO 639-2 language identifier, i.e. 'en'.\n\n        if (!text) {\n          callback.apply(undefined, [UNKNOWN]);\n          return;\n        }\n        text = text.substr(0, MAX_LENGTH).replace(/[\\u0021-\\u0040]/g, '');\n        identify(text, callback);\n      },\n      info: function (text, callback) {\n        // Return language info tuple (id, code, name), i.e. ('en', 26110, 'English').\n\n        this.detect(text, function (language) {\n          if (language === UNKNOWN) {\n            callback.apply(undefined, [[UNKNOWN, UNKNOWN, UNKNOWN]]);\n            return;\n          }\n          callback.apply(undefined, [[language, IANA_MAP[language], NAME_MAP[language]]]);\n          ;\n        });\n      },\n      code: function (text, callback) {\n        // Return the language IANA code, i.e. 26110.\n\n        this.detect(text, function (language) {\n          if (language === UNKNOWN) {\n            callback.apply(undefined, [-1]);\n            ;\n            return;\n          }\n          callback.apply(undefined, [IANA_MAP[language]]);\n        });\n      },\n      name: function (text, callback) {\n        // Return the full language name, i.e. 'English'.\n\n        this.detect(text, function (language) {\n          if (language === UNKNOWN) {\n            callback.apply(undefined, [UNKNOWN]);\n            ;\n            return;\n          }\n          callback.apply(undefined, [NAME_MAP[language]]);\n        });\n      }\n    };\n  };\n  global.guessLanguage = (global.module || {}).exports = new guessLanguage();\n})(this);","map":{"version":3,"names":["global","undefined","guessLanguage","models","_languageData","module","exports","require","MAX_LENGTH","MIN_LENGTH","MAX_GRAMS","NAME_MAP","IANA_MAP","SINGLETONS","UNKNOWN","BASIC_LATIN","EXTENDED_LATIN","ALL_LATIN","concat","CYRILLIC","ARABIC","DEVANAGARI","PT","unicodeBlockTests","findRuns","text","relevant_runs","key","charCount","match","pct","length","identify","callback","scripts","apply","check","i","l","latin_lang","sample","langs","scores","model","createOrderedModel","lkey","toLowerCase","known_model","distance","scoresArr","index","push","sortedScores","sort","objA","objB","content","trigrams","sortedTrigrams","contentArr","split","trigramKey","dist","Math","abs","detect","substr","replace","info","language","code","name"],"sources":["C:/Users/swths/OneDrive/Documents/youtube-transcriber/youtube-transcriber/client/node_modules/guesslanguage/lib/guessLanguage.js"],"sourcesContent":["/*   Guess the natural language of a text\n *   Copyright (c) 2012, Rich Tibbett\n *   http://github.com/richtr/guessLanguage.js/\n *\n *   Original Python package:\n *   Copyright (c) 2008, Kent S Johnson\n *   http://code.google.com/p/guess-language/\n *\n *   Original C++ version for KDE:\n *   Copyright (c) 2006 Jacob R Rideout <kde@jacobrideout.net>\n *   http://websvn.kde.org/branches/work/sonnet-refactoring/common/nlp/guesslanguage.cpp?view=markup\n *\n *   Original Language::Guess Perl module:\n *   Copyright (c) 2004-2006 Maciej Ceglowski\n *   http://web.archive.org/web/20090228163219/http://languid.cantbedone.org/\n *\n *   Note: Language::Guess is GPL-licensed. KDE developers received permission\n *   from the author to distribute their port under LGPL:\n *   http://lists.kde.org/?l=kde-sonnet&m=116910092228811&w=2\n *\n *   This program is free software: you can redistribute it and/or modify it\n *   under the terms of the GNU Lesser General Public License as published\n *   by the Free Software Foundation, either version 3 of the License,\n *   or (at your option) any later version.\n *\n *   This program is distributed in the hope that it will be useful,\n *   but WITHOUT ANY WARRANTY; without even the implied warranty\n *   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n *   See the GNU Lesser General Public License for more details.\n *\n *   You should have received a copy of the GNU Lesser General Public License\n *   along with this program. If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function(global, undefined) {\n\n  var guessLanguage = function() {\n    \n      var models = global._languageData || {};\n\n      if (typeof module === \"object\" && module.exports === global) {\n        models = require('./_languageData') || {};\n      }\n\n      var MAX_LENGTH = 4096;\n      var MIN_LENGTH = 20;\n      var MAX_GRAMS = 300;\n\n      var NAME_MAP = {\n        \"ab\": \"Abkhazian\",\n        \"af\": \"Afrikaans\",\n        \"ar\": \"Arabic\",\n        \"az\": \"Azeri\",\n        \"be\": \"Belarusian\",\n        \"bg\": \"Bulgarian\",\n        \"bn\": \"Bengali\",\n        \"bo\": \"Tibetan\",\n        \"br\": \"Breton\",\n        \"ca\": \"Catalan\",\n        \"ceb\": \"Cebuano\",\n        \"cs\": \"Czech\",\n        \"cy\": \"Welsh\",\n        \"da\": \"Danish\",\n        \"de\": \"German\",\n        \"el\": \"Greek\",\n        \"en\": \"English\",\n        \"eo\": \"Esperanto\",\n        \"es\": \"Spanish\",\n        \"et\": \"Estonian\",\n        \"eu\": \"Basque\",\n        \"fa\": \"Farsi\",\n        \"fi\": \"Finnish\",\n        \"fo\": \"Faroese\",\n        \"fr\": \"French\",\n        \"fy\": \"Frisian\",\n        \"gd\": \"Scots Gaelic\",\n        \"gl\": \"Galician\",\n        \"gu\": \"Gujarati\",\n        \"ha\": \"Hausa\",\n        \"haw\": \"Hawaiian\",\n        \"he\": \"Hebrew\",\n        \"hi\": \"Hindi\",\n        \"hr\": \"Croatian\",\n        \"hu\": \"Hungarian\",\n        \"hy\": \"Armenian\",\n        \"id\": \"Indonesian\",\n        \"is\": \"Icelandic\",\n        \"it\": \"Italian\",\n        \"ja\": \"Japanese\",\n        \"ka\": \"Georgian\",\n        \"kk\": \"Kazakh\",\n        \"km\": \"Cambodian\",\n        \"ko\": \"Korean\",\n        \"ku\": \"Kurdish\",\n        \"ky\": \"Kyrgyz\",\n        \"la\": \"Latin\",\n        \"lt\": \"Lithuanian\",\n        \"lv\": \"Latvian\",\n        \"mg\": \"Malagasy\",\n        \"mk\": \"Macedonian\",\n        \"ml\": \"Malayalam\",\n        \"mn\": \"Mongolian\",\n        \"mr\": \"Marathi\",\n        \"ms\": \"Malay\",\n        \"nd\": \"Ndebele\",\n        \"ne\": \"Nepali\",\n        \"nl\": \"Dutch\",\n        \"nn\": \"Nynorsk\",\n        \"no\": \"Norwegian\",\n        \"nso\": \"Sepedi\",\n        \"pa\": \"Punjabi\",\n        \"pl\": \"Polish\",\n        \"ps\": \"Pashto\",\n        \"pt\": \"Portuguese\",\n        \"pt_PT\": \"Portuguese (Portugal)\",\n        \"pt_BR\": \"Portuguese (Brazil)\",\n        \"ro\": \"Romanian\",\n        \"ru\": \"Russian\",\n        \"sa\": \"Sanskrit\",\n        \"sh\": \"Serbo-Croatian\",\n        \"sk\": \"Slovak\",\n        \"sl\": \"Slovene\",\n        \"so\": \"Somali\",\n        \"sq\": \"Albanian\",\n        \"sr\": \"Serbian\",\n        \"sv\": \"Swedish\",\n        \"sw\": \"Swahili\",\n        \"ta\": \"Tamil\",\n        \"te\": \"Telugu\",\n        \"th\": \"Thai\",\n        \"tl\": \"Tagalog\",\n        \"tlh\": \"Klingon\",\n        \"tn\": \"Setswana\",\n        \"tr\": \"Turkish\",\n        \"ts\": \"Tsonga\",\n        \"tw\": \"Twi\",\n        \"uk\": \"Ukrainian\",\n        \"ur\": \"Urdu\",\n        \"uz\": \"Uzbek\",\n        \"ve\": \"Venda\",\n        \"vi\": \"Vietnamese\",\n        \"xh\": \"Xhosa\",\n        \"zh\": \"Chinese\",\n        \"zh_TW\": \"Traditional Chinese (Taiwan)\",\n        \"zu\": \"Zulu\",\n      };\n\n      var IANA_MAP = {\n        \"ab\": 12026,\n        \"af\": 40,\n        \"ar\": 26020,\n        \"az\": 26030,\n        \"be\": 11890,\n        \"bg\": 26050,\n        \"bn\": 26040,\n        \"bo\": 26601,\n        \"br\": 1361,\n        \"ca\": 3,\n        \"ceb\": 26060,\n        \"cs\": 26080,\n        \"cy\": 26560,\n        \"da\": 26090,\n        \"de\": 26160,\n        \"el\": 26165,\n        \"en\": 26110,\n        \"eo\": 11933,\n        \"es\": 26460,\n        \"et\": 26120,\n        \"eu\": 1232,\n        \"fa\": 26130,\n        \"fi\": 26140,\n        \"fo\": 11817,\n        \"fr\": 26150,\n        \"fy\": 1353,\n        \"gd\": 65555,\n        \"gl\": 1252,\n        \"gu\": 26599,\n        \"ha\": 26170,\n        \"haw\": 26180,\n        \"he\": 26592,\n        \"hi\": 26190,\n        \"hr\": 26070,\n        \"hu\": 26200,\n        \"hy\": 26597,\n        \"id\": 26220,\n        \"is\": 26210,\n        \"it\": 26230,\n        \"ja\": 26235,\n        \"ka\": 26600,\n        \"kk\": 26240,\n        \"km\": 1222,\n        \"ko\": 26255,\n        \"ku\": 11815,\n        \"ky\": 26260,\n        \"la\": 26280,\n        \"lt\": 26300,\n        \"lv\": 26290,\n        \"mg\": 1362,\n        \"mk\": 26310,\n        \"ml\": 26598,\n        \"mn\": 26320,\n        \"mr\": 1201,\n        \"ms\": 1147,\n        \"ne\": 26330,\n        \"nl\": 26100,\n        \"nn\": 172,\n        \"no\": 26340,\n        \"pa\": 65550,\n        \"pl\": 26380,\n        \"ps\": 26350,\n        \"pt\": 26390,\n        \"ro\": 26400,\n        \"ru\": 26410,\n        \"sa\": 1500,\n        \"sh\": 1399,\n        \"sk\": 26430,\n        \"sl\": 26440,\n        \"so\": 26450,\n        \"sq\": 26010,\n        \"sr\": 26420,\n        \"sv\": 26480,\n        \"sw\": 26470,\n        \"ta\": 26595,\n        \"te\": 26596,\n        \"th\": 26594,\n        \"tl\": 26490,\n        \"tlh\": 26250,\n        \"tn\": 65578,\n        \"tr\": 26500,\n        \"tw\": 1499,\n        \"uk\": 26520,\n        \"ur\": 26530,\n        \"uz\": 26540,\n        \"vi\": 26550,\n        \"zh\": 26065,\n        \"zh_TW\": 22,\n      };\n\n      var SINGLETONS = [\n        [\"Armenian\", \"hy\"],\n        [\"Hebrew\", \"he\"],\n        [\"Bengali\", \"bn\"],\n        [\"Gurmukhi\", \"pa\"],\n        [\"Greek\", \"el\"],\n        [\"Gujarati\", \"gu\"],\n        [\"Oriya\", \"or\"],\n        [\"Tamil\", \"ta\"],\n        [\"Telugu\", \"te\"],\n        [\"Kannada\", \"kn\"],\n        [\"Malayalam\", \"ml\"],\n        [\"Sinhala\", \"si\"],\n        [\"Thai\", \"th\"],\n        [\"Lao\", \"lo\"],\n        [\"Tibetan\", \"bo\"],\n        [\"Burmese\", \"my\"],\n        [\"Georgian\", \"ka\"],\n        [\"Mongolian\", \"mn\"],\n        [\"Khmer\", \"km\"]\n      ];\n\n      var UNKNOWN = 'unknown';\n\n      var BASIC_LATIN = [\"en\", \"ceb\", \"ha\", \"so\", \"tlh\", \"id\", \"haw\", \"la\", \"sw\", \"eu\", \"nr\", \"nso\", \"zu\", \"xh\", \"ss\", \"st\", \"tn\", \"ts\"];\n      var EXTENDED_LATIN = [\"cs\", \"af\", \"pl\", \"hr\", \"ro\", \"sk\", \"sl\", \"tr\", \"hu\", \"az\", \"et\", \"sq\", \"ca\", \"es\", \"fr\", \"de\", \"nl\", \"it\", \"da\", \"is\", \"no\", \"sv\", \"fi\", \"lv\", \"pt\", \"ve\", \"lt\", \"tl\", \"cy\", \"vi\"];\n      var ALL_LATIN = BASIC_LATIN.concat(EXTENDED_LATIN);\n      var CYRILLIC = [\"ru\", \"uk\", \"kk\", \"uz\", \"mn\", \"sr\", \"mk\", \"bg\", \"ky\"];\n      var ARABIC = [\"ar\", \"fa\", \"ps\", \"ur\"];\n      var DEVANAGARI = [\"hi\", \"ne\"];\n      var PT = [\"pt_BR\", \"pt_PT\"];\n\n      // Unicode char greedy regex block range matchers\n      var unicodeBlockTests = {\n      \t\"Basic Latin\": /[\\u0000-\\u007F]/g,\n      \t\"Latin-1 Supplement\": /[\\u0080-\\u00FF]/g,\n      \t\"Latin Extended-A\": /[\\u0100-\\u017F]/g,\n      \t\"Latin Extended-B\": /[\\u0180-\\u024F]/g,\n      \t\"IPA Extensions\": /[\\u0250-\\u02AF]/g,\n      \t\"Spacing Modifier Letters\": /[\\u02B0-\\u02FF]/g,\n      \t\"Combining Diacritical Marks\": /[\\u0300-\\u036F]/g,\n      \t\"Greek and Coptic\": /[\\u0370-\\u03FF]/g,\n      \t\"Cyrillic\": /[\\u0400-\\u04FF]/g,\n      \t\"Cyrillic Supplement\": /[\\u0500-\\u052F]/g,\n      \t\"Armenian\": /[\\u0530-\\u058F]/g,\n      \t\"Hebrew\": /[\\u0590-\\u05FF]/g,\n      \t\"Arabic\": /[\\u0600-\\u06FF]/g,\n      \t\"Syriac\": /[\\u0700-\\u074F]/g,\n      \t\"Arabic Supplement\": /[\\u0750-\\u077F]/g,\n      \t\"Thaana\": /[\\u0780-\\u07BF]/g,\n      \t\"NKo\": /[\\u07C0-\\u07FF]/g,\n      \t\"Devanagari\": /[\\u0900-\\u097F]/g,\n      \t\"Bengali\": /[\\u0980-\\u09FF]/g,\n      \t\"Gurmukhi\": /[\\u0A00-\\u0A7F]/g,\n      \t\"Gujarati\": /[\\u0A80-\\u0AFF]/g,\n      \t\"Oriya\": /[\\u0B00-\\u0B7F]/g,\n      \t\"Tamil\": /[\\u0B80-\\u0BFF]/g,\n      \t\"Telugu\": /[\\u0C00-\\u0C7F]/g,\n      \t\"Kannada\": /[\\u0C80-\\u0CFF]/g,\n      \t\"Malayalam\": /[\\u0D00-\\u0D7F]/g,\n      \t\"Sinhala\": /[\\u0D80-\\u0DFF]/g,\n      \t\"Thai\": /[\\u0E00-\\u0E7F]/g,\n      \t\"Lao\": /[\\u0E80-\\u0EFF]/g,\n      \t\"Tibetan\": /[\\u0F00-\\u0FFF]/g,\n      \t\"Myanmar\": /[\\u1000-\\u109F]/g,\n      \t\"Georgian\": /[\\u10A0-\\u10FF]/g,\n      \t\"Hangul Jamo\": /[\\u1100-\\u11FF]/g,\n      \t\"Ethiopic\": /[\\u1200-\\u137F]/g,\n      \t\"Ethiopic Supplement\": /[\\u1380-\\u139F]/g,\n      \t\"Cherokee\": /[\\u13A0-\\u13FF]/g,\n      \t\"Unified Canadian Aboriginal Syllabics\": /[\\u1400-\\u167F]/g,\n      \t\"Ogham\": /[\\u1680-\\u169F]/g,\n      \t\"Runic\": /[\\u16A0-\\u16FF]/g,\n      \t\"Tagalog\": /[\\u1700-\\u171F]/g,\n      \t\"Hanunoo\": /[\\u1720-\\u173F]/g,\n      \t\"Buhid\": /[\\u1740-\\u175F]/g,\n      \t\"Tagbanwa\": /[\\u1760-\\u177F]/g,\n      \t\"Khmer\": /[\\u1780-\\u17FF]/g,\n      \t\"Mongolian\": /[\\u1800-\\u18AF]/g,\n      \t\"Limbu\": /[\\u1900-\\u194F]/g,\n      \t\"Tai Le\": /[\\u1950-\\u197F]/g,\n      \t\"New Tai Lue\": /[\\u1980-\\u19DF]/g,\n      \t\"Khmer Symbols\": /[\\u19E0-\\u19FF]/g,\n      \t\"Buginese\": /[\\u1A00-\\u1A1F]/g,\n      \t\"Balinese\": /[\\u1B00-\\u1B7F]/g,\n      \t\"Phonetic Extensions\": /[\\u1D00-\\u1D7F]/g,\n      \t\"Phonetic Extensions Supplement\": /[\\u1D80-\\u1DBF]/g,\n      \t\"Combining Diacritical Marks Supplement\": /[\\u1DC0-\\u1DFF]/g,\n      \t\"Latin Extended Additional\": /[\\u1E00-\\u1EFF]/g,\n      \t\"Greek Extended\": /[\\u1F00-\\u1FFF]/g,\n      \t\"General Punctuation\": /[\\u2000-\\u206F]/g,\n      \t\"Superscripts and Subscripts\": /[\\u2070-\\u209F]/g,\n      \t\"Currency Symbols\": /[\\u20A0-\\u20CF]/g,\n      \t\"Combining Diacritical Marks for Symbols\": /[\\u20D0-\\u20FF]/g,\n      \t\"Letterlike Symbols\": /[\\u2100-\\u214F]/g,\n      \t\"Number Forms\": /[\\u2150-\\u218F]/g,\n      \t\"Arrows\": /[\\u2190-\\u21FF]/g,\n      \t\"Mathematical Operators\": /[\\u2200-\\u22FF]/g,\n      \t\"Miscellaneous Technical\": /[\\u2300-\\u23FF]/g,\n      \t\"Control Pictures\": /[\\u2400-\\u243F]/g,\n      \t\"Optical Character Recognition\": /[\\u2440-\\u245F]/g,\n      \t\"Enclosed Alphanumerics\": /[\\u2460-\\u24FF]/g,\n      \t\"Box Drawing\": /[\\u2500-\\u257F]/g,\n      \t\"Block Elements\": /[\\u2580-\\u259F]/g,\n      \t\"Geometric Shapes\": /[\\u25A0-\\u25FF]/g,\n      \t\"Miscellaneous Symbols\": /[\\u2600-\\u26FF]/g,\n      \t\"Dingbats\": /[\\u2700-\\u27BF]/g,\n      \t\"Miscellaneous Mathematical Symbols-A\": /[\\u27C0-\\u27EF]/g,\n      \t\"Supplemental Arrows-A\": /[\\u27F0-\\u27FF]/g,\n      \t\"Braille Patterns\": /[\\u2800-\\u28FF]/g,\n      \t\"Supplemental Arrows-B\": /[\\u2900-\\u297F]/g,\n      \t\"Miscellaneous Mathematical Symbols-B\": /[\\u2980-\\u29FF]/g,\n      \t\"Supplemental Mathematical Operators\": /[\\u2A00-\\u2AFF]/g,\n      \t\"Miscellaneous Symbols and Arrows\": /[\\u2B00-\\u2BFF]/g,\n      \t\"Glagolitic\": /[\\u2C00-\\u2C5F]/g,\n      \t\"Latin Extended-C\": /[\\u2C60-\\u2C7F]/g,\n      \t\"Coptic\": /[\\u2C80-\\u2CFF]/g,\n      \t\"Georgian Supplement\": /[\\u2D00-\\u2D2F]/g,\n      \t\"Tifinagh\": /[\\u2D30-\\u2D7F]/g,\n      \t\"Ethiopic Extended\": /[\\u2D80-\\u2DDF]/g,\n      \t\"Supplemental Punctuation\": /[\\u2E00-\\u2E7F]/g,\n      \t\"CJK Radicals Supplement\": /[\\u2E80-\\u2EFF]/g,\n      \t\"KangXi Radicals\": /[\\u2F00-\\u2FDF]/g,\n      \t\"Ideographic Description Characters\": /[\\u2FF0-\\u2FFF]/g,\n      \t\"CJK Symbols and Punctuation\": /[\\u3000-\\u303F]/g,\n      \t\"Hiragana\": /[\\u3040-\\u309F]/g,\n      \t\"Katakana\": /[\\u30A0-\\u30FF]/g,\n      \t\"Bopomofo\": /[\\u3100-\\u312F]/g,\n      \t\"Hangul Compatibility Jamo\": /[\\u3130-\\u318F]/g,\n      \t\"Kanbun\": /[\\u3190-\\u319F]/g,\n      \t\"Bopomofo Extended\": /[\\u31A0-\\u31BF]/g,\n      \t\"CJK Strokes\": /[\\u31C0-\\u31EF]/g,\n      \t\"Katakana Phonetic Extensions\": /[\\u31F0-\\u31FF]/g,\n      \t\"Enclosed CJK Letters and Months\": /[\\u3200-\\u32FF]/g,\n      \t\"CJK Compatibility\": /[\\u3300-\\u33FF]/g,\n      \t\"CJK Unified Ideographs Extension A\": /[\\u3400-\\u4DBF]/g,\n      \t\"Yijing Hexagram Symbols\": /[\\u4DC0-\\u4DFF]/g,\n      \t\"CJK Unified Ideographs\": /[\\u4E00-\\u9FFF]/g,\n      \t\"Yi Syllables\": /[\\uA000-\\uA48F]/g,\n      \t\"Yi Radicals\": /[\\uA490-\\uA4CF]/g,\n      \t\"Modifier Tone Letters\": /[\\uA700-\\uA71F]/g,\n      \t\"Latin Extended-D\": /[\\uA720-\\uA7FF]/g,\n      \t\"Syloti Nagri\": /[\\uA800-\\uA82F]/g,\n      \t\"Phags-pa\": /[\\uA840-\\uA87F]/g,\n      \t\"Hangul Syllables\": /[\\uAC00-\\uD7AF]/g,\n      \t\"High Surrogates\": /[\\uD800-\\uDB7F]/g,\n      \t\"High Private Use Surrogates\": /[\\uDB80-\\uDBFF]/g,\n      \t\"Low Surrogates\": /[\\uDC00-\\uDFFF]/g,\n      \t\"Private Use Area\": /[\\uE000-\\uF8FF]/g,\n      \t\"CJK Compatibility Ideographs\": /[\\uF900-\\uFAFF]/g,\n      \t\"Alphabetic Presentation Forms\": /[\\uFB00-\\uFB4F]/g,\n      \t\"Arabic Presentation Forms-A\": /[\\uFB50-\\uFDFF]/g,\n      \t\"Variation Selectors\": /[\\uFE00-\\uFE0F]/g,\n      \t\"Vertical Forms\": /[\\uFE10-\\uFE1F]/g,\n      \t\"Combining Half Marks\": /[\\uFE20-\\uFE2F]/g,\n      \t\"CJK Compatibility Forms\": /[\\uFE30-\\uFE4F]/g,\n      \t\"Small Form Variants\": /[\\uFE50-\\uFE6F]/g,\n      \t\"Arabic Presentation Forms-B\": /[\\uFE70-\\uFEFF]/g,\n      \t\"Halfwidth and Fullwidth Forms\": /[\\uFF00-\\uFFEF]/g,\n      \t\"Specials\": /[\\uFFF0-\\uFFFF]/g/*,\n      \t\"Linear B Syllabary\": /[\\u10000-\\u1007F]/g,\n      \t\"Linear B Ideograms\": /[\\u10080-\\u100FF]/g,\n      \t\"Aegean Numbers\": /[\\u10100-\\u1013F]/g,\n      \t\"Ancient Greek Numbers\": /[\\u10140-\\u1018F]/g,\n      \t\"Old Italic\": /[\\u10300-\\u1032F]/g,\n      \t\"Gothic\": /[\\u10330-\\u1034F]/g,\n      \t\"Ugaritic\": /[\\u10380-\\u1039F]/g,\n      \t\"Old Persian\": /[\\u103A0-\\u103DF]/g,\n      \t\"Deseret\": /[\\u10400-\\u1044F]/g,\n      \t\"Shavian\": /[\\u10450-\\u1047F]/g,\n      \t\"Osmanya\": /[\\u10480-\\u104AF]/g,\n      \t\"Cypriot Syllabary\": /[\\u10800-\\u1083F]/g,\n      \t\"Phoenician\": /[\\u10900-\\u1091F]/g,\n      \t\"Kharoshthi\": /[\\u10A00-\\u10A5F]/g,\n      \t\"Cuneiform\": /[\\u12000-\\u123FF]/g,\n      \t\"Cuneiform Numbers and Punctuation\": /[\\u12400-\\u1247F]/g,\n      \t\"Byzantine Musical Symbols\": /[\\u1D000-\\u1D0FF]/g,\n      \t\"Musical Symbols\": /[\\u1D100-\\u1D1FF]/g,\n      \t\"Ancient Greek Musical Notation\": /[\\u1D200-\\u1D24F]/g,\n      \t\"Tai Xuan Jing Symbols\": /[\\u1D300-\\u1D35F]/g,\n      \t\"Counting Rod Numerals\": /[\\u1D360-\\u1D37F]/g,\n      \t\"Mathematical Alphanumeric Symbols\": /[\\u1D400-\\u1D7FF]/g,\n      \t\"CJK Unified Ideographs Extension B\": /[\\u20000-\\u2A6DF]/g,\n      \t\"CJK Compatibility Ideographs Supplement\": /[\\u2F800-\\u2FA1F]/g,\n      \t\"Tags\": /[\\uE0000-\\uE007F]/g,\n      \t\"Variation Selectors Supplement\": /[\\uE0100-\\uE01EF]/g,\n      \t\"Supplementary Private Use Area-A\": /[\\uF0000-\\uFFFFF]/g,\n      \t\"Supplementary Private Use Area-B\": /[\\u100000-\\u10FFFF]/g*/\n      };\n\n      function findRuns(text) {\n\n        var relevant_runs = {};\n\n        for (var key in unicodeBlockTests) {\n            \n          // Count the number of characters in each character block.\n          var charCount = text.match(unicodeBlockTests[key]);\n\n          // return run types that used for 40% or more of the string\n          // always return basic latin if found more than 15%\n          // and extended additional latin if over 10% (for Vietnamese)\n          var pct = (charCount ? charCount.length : 0) / text.length;\n\n          relevant_runs[key] = pct;\n           \n        }\n\n        return relevant_runs;\n      }\n\n      function identify(text, callback) {\n\n        var scripts = findRuns(text);\n\n        // Identify the language.\n        if (scripts[\"Hangul Syllables\"] + scripts[\"Hangul Jamo\"] + scripts[\"Hangul Compatibility Jamo\"] >= 0.4) {\n          callback.apply(undefined, [\"ko\"]);\n          return;\n        }\n\n        if (scripts[\"Greek and Coptic\"] >= 0.4) {\n          callback.apply(undefined, [\"el\"]);\n          return;\n        }\n\n        if (scripts[\"Hiragana\"] + scripts[\"Katakana\"] + scripts[\"Katakana Phonetic Extensions\"] >= 0.2) {\n          callback.apply(undefined, [\"ja\"]);\n          return;\n        }\n\n        if (scripts[\"CJK Unified Ideographs\"] + scripts[\"Bopomofo\"] + scripts[\"Bopomofo Extended\"] + scripts[\"KangXi Radicals\"] >= 0.4) {\n          callback.apply(undefined, [\"zh\"]);\n          return;\n        }\n\n        if (scripts[\"Cyrillic\"] >= 0.4) {\n          check(text, CYRILLIC, callback);\n          return;\n        }\n\n        if (scripts[\"Arabic\"] + scripts[\"Arabic Presentation Forms-A\"] + scripts[\"Arabic Presentation Forms-B\"] >= 0.4) {\n          check(text, ARABIC, callback);\n          return;\n        }\n\n        if (scripts[\"Devanagari\"] >= 0.4) {\n          check(text, DEVANAGARI, callback);\n          return;\n        }\n\n        // Try languages with unique scripts\n        for (var i = 0, l = SINGLETONS.length; i < l; i++) {\n          if (scripts[SINGLETONS[i][0]] >= 0.4) {\n            callback.apply(undefined, [SINGLETONS[i][1]]);\n            return;\n          }\n        }\n\n        // Extended Latin\n        if (scripts[\"Latin-1 Supplement\"] + scripts[\"Latin Extended-A\"] + scripts[\"IPA Extensions\"] >= 0.4) {\n          check(text, EXTENDED_LATIN, function(latin_lang) {\n            if (latin_lang == \"pt\") {\n              check(text, PT, callback);\n            } else {\n              callback.apply(undefined, [latin_lang]);\n            }\n          });\n          return;\n        }\n\n        if (scripts[\"Basic Latin\"] >= 0.15) {\n          check(text, ALL_LATIN, callback);\n          return;\n        }\n\n        callback.apply(undefined, [UNKNOWN]);\n        // return;\n      }\n\n      function check(sample, langs, callback) {\n\n        if (sample.length < MIN_LENGTH) {\n          callback.apply(undefined, [UNKNOWN]);\n          return;\n        }\n\n        var scores = {};\n        var model = createOrderedModel(sample)\n        for (var i = 0, l = langs.length; i < l; i++) {\n\n          var lkey = langs[i].toLowerCase();\n\n          var known_model = models[lkey] || null;\n\n          if (!known_model) {\n            continue;\n          }\n\n          scores[lkey] = distance(model, known_model);\n\n        }\n\n        var scoresArr = [];\n        for (var index in scores) {\n          scoresArr.push([index, scores[index]]);\n        }\n\n        if (scoresArr.length == 0) {\n          callback.apply(undefined, [UNKNOWN]);\n          return;\n        }\n\n        // we want the lowest score, less distance = greater chance of match\n        var sortedScores = scoresArr.sort(function(objA, objB) {\n          return objA[1] - objB[1]; // sort low-to-high\n        });\n\n        // return the best match we've now calculated\n        callback.apply(undefined, [sortedScores[0][0]]);\n        //return;\n      }\n\n      function createOrderedModel(content) {\n        // Create a list of trigrams in content sorted by frequency.\n        var trigrams = {},\n            sortedTrigrams = [];\n        var content = content.toLowerCase();\n\n        var contentArr = content.split(\"\");\n        for (var i = 0, l = contentArr.length - 2; i < l; i++) {\n          var trigramKey = contentArr[i] + contentArr[i + 1] + contentArr[i + 2] + \"\";\n          if (!trigrams[trigramKey]) {\n            trigrams[trigramKey] = 1;\n          } else {\n            trigrams[trigramKey] += 1;\n          }\n        }\n\n        // convert object to array\n        for (var i in trigrams) {\n          sortedTrigrams[sortedTrigrams.length] = [i, trigrams[i]];\n        }\n\n        // sort array results\n        return sortedTrigrams.sort(function(objA, objB) {\n          return objB[1] - objA[1]; // sort high-to-low\n        });\n      }\n\n      function distance(model, known_model) {\n        // Calculate the distance to the known model.\n        var dist = 0;\n\n        for (var i = 0, l = model.length; i < l; i++) {\n\n          if (known_model[model[i][0]]) {\n\n            dist += Math.abs(model[i][1] - known_model[model[i][0]]);\n\n          } else {\n\n            dist += MAX_GRAMS;\n\n          }\n\n        }\n\n        return dist;\n      }\n\n      return {\n        detect: function(text, callback) {\n          // Return the ISO 639-2 language identifier, i.e. 'en'.\n\n          if (!text) {\n            callback.apply(undefined, [UNKNOWN]);\n            return;\n          }\n\n          text = text.substr(0, MAX_LENGTH).replace(/[\\u0021-\\u0040]/g, '');\n\n          identify(text, callback);\n\n        },\n        info: function(text, callback) {\n          // Return language info tuple (id, code, name), i.e. ('en', 26110, 'English').\n\n          this.detect(text, function(language) {\n\n            if (language === UNKNOWN) {\n                callback.apply(undefined, [[ UNKNOWN, UNKNOWN, UNKNOWN ]]);\n                return;\n            }\n\n            callback.apply(undefined, [\n\n              [ language, IANA_MAP[language], NAME_MAP[language] ]\n\n            ]);;\n\n          });\n\n        },\n        code: function(text, callback) {\n          // Return the language IANA code, i.e. 26110.\n\n          this.detect(text, function(language) {\n              \n            if (language === UNKNOWN) {\n              callback.apply(undefined, [ -1 ]);;\n              return;\n            }\n\n            callback.apply(undefined, [\n\n              IANA_MAP[language]\n\n            ]);\n\n          });\n\n        },\n        name: function(text, callback) {\n          // Return the full language name, i.e. 'English'.\n\n          this.detect(text, function(language) {\n              \n            if (language === UNKNOWN) {\n              callback.apply(undefined, [ UNKNOWN ]);;\n              return;\n            }\n\n            callback.apply(undefined, [\n\n              NAME_MAP[language]\n\n            ]);\n\n          });\n\n        }\n      };\n  \n  };\n\n  global.guessLanguage = (global.module || {}).exports = new guessLanguage();\n\n})(this);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,UAASA,MAAM,EAAEC,SAAS,EAAE;EAE3B,IAAIC,aAAa,GAAG,SAAAA,CAAA,EAAW;IAE3B,IAAIC,MAAM,GAAGH,MAAM,CAACI,aAAa,IAAI,CAAC,CAAC;IAEvC,IAAI,OAAOC,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACC,OAAO,KAAKN,MAAM,EAAE;MAC3DG,MAAM,GAAGI,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC3C;IAEA,IAAIC,UAAU,GAAG,IAAI;IACrB,IAAIC,UAAU,GAAG,EAAE;IACnB,IAAIC,SAAS,GAAG,GAAG;IAEnB,IAAIC,QAAQ,GAAG;MACb,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,SAAS;MACf,KAAK,EAAE,SAAS;MAChB,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,cAAc;MACpB,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,OAAO;MACb,KAAK,EAAE,UAAU;MACjB,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,WAAW;MACjB,KAAK,EAAE,QAAQ;MACf,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,YAAY;MAClB,OAAO,EAAE,uBAAuB;MAChC,OAAO,EAAE,qBAAqB;MAC9B,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,gBAAgB;MACtB,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,MAAM;MACZ,IAAI,EAAE,SAAS;MACf,KAAK,EAAE,SAAS;MAChB,IAAI,EAAE,UAAU;MAChB,IAAI,EAAE,SAAS;MACf,IAAI,EAAE,QAAQ;MACd,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,WAAW;MACjB,IAAI,EAAE,MAAM;MACZ,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,YAAY;MAClB,IAAI,EAAE,OAAO;MACb,IAAI,EAAE,SAAS;MACf,OAAO,EAAE,8BAA8B;MACvC,IAAI,EAAE;IACR,CAAC;IAED,IAAIC,QAAQ,GAAG;MACb,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,EAAE;MACR,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,CAAC;MACP,KAAK,EAAE,KAAK;MACZ,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,KAAK,EAAE,KAAK;MACZ,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,GAAG;MACT,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,KAAK,EAAE,KAAK;MACZ,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,IAAI,EAAE,KAAK;MACX,OAAO,EAAE;IACX,CAAC;IAED,IAAIC,UAAU,GAAG,CACf,CAAC,UAAU,EAAE,IAAI,CAAC,EAClB,CAAC,QAAQ,EAAE,IAAI,CAAC,EAChB,CAAC,SAAS,EAAE,IAAI,CAAC,EACjB,CAAC,UAAU,EAAE,IAAI,CAAC,EAClB,CAAC,OAAO,EAAE,IAAI,CAAC,EACf,CAAC,UAAU,EAAE,IAAI,CAAC,EAClB,CAAC,OAAO,EAAE,IAAI,CAAC,EACf,CAAC,OAAO,EAAE,IAAI,CAAC,EACf,CAAC,QAAQ,EAAE,IAAI,CAAC,EAChB,CAAC,SAAS,EAAE,IAAI,CAAC,EACjB,CAAC,WAAW,EAAE,IAAI,CAAC,EACnB,CAAC,SAAS,EAAE,IAAI,CAAC,EACjB,CAAC,MAAM,EAAE,IAAI,CAAC,EACd,CAAC,KAAK,EAAE,IAAI,CAAC,EACb,CAAC,SAAS,EAAE,IAAI,CAAC,EACjB,CAAC,SAAS,EAAE,IAAI,CAAC,EACjB,CAAC,UAAU,EAAE,IAAI,CAAC,EAClB,CAAC,WAAW,EAAE,IAAI,CAAC,EACnB,CAAC,OAAO,EAAE,IAAI,CAAC,CAChB;IAED,IAAIC,OAAO,GAAG,SAAS;IAEvB,IAAIC,WAAW,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAClI,IAAIC,cAAc,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACzM,IAAIC,SAAS,GAAGF,WAAW,CAACG,MAAM,CAACF,cAAc,CAAC;IAClD,IAAIG,QAAQ,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACrE,IAAIC,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACrC,IAAIC,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;IAC7B,IAAIC,EAAE,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;;IAE3B;IACA,IAAIC,iBAAiB,GAAG;MACvB,aAAa,EAAE,kBAAkB;MACjC,oBAAoB,EAAE,kBAAkB;MACxC,kBAAkB,EAAE,kBAAkB;MACtC,kBAAkB,EAAE,kBAAkB;MACtC,gBAAgB,EAAE,kBAAkB;MACpC,0BAA0B,EAAE,kBAAkB;MAC9C,6BAA6B,EAAE,kBAAkB;MACjD,kBAAkB,EAAE,kBAAkB;MACtC,UAAU,EAAE,kBAAkB;MAC9B,qBAAqB,EAAE,kBAAkB;MACzC,UAAU,EAAE,kBAAkB;MAC9B,QAAQ,EAAE,kBAAkB;MAC5B,QAAQ,EAAE,kBAAkB;MAC5B,QAAQ,EAAE,kBAAkB;MAC5B,mBAAmB,EAAE,kBAAkB;MACvC,QAAQ,EAAE,kBAAkB;MAC5B,KAAK,EAAE,kBAAkB;MACzB,YAAY,EAAE,kBAAkB;MAChC,SAAS,EAAE,kBAAkB;MAC7B,UAAU,EAAE,kBAAkB;MAC9B,UAAU,EAAE,kBAAkB;MAC9B,OAAO,EAAE,kBAAkB;MAC3B,OAAO,EAAE,kBAAkB;MAC3B,QAAQ,EAAE,kBAAkB;MAC5B,SAAS,EAAE,kBAAkB;MAC7B,WAAW,EAAE,kBAAkB;MAC/B,SAAS,EAAE,kBAAkB;MAC7B,MAAM,EAAE,kBAAkB;MAC1B,KAAK,EAAE,kBAAkB;MACzB,SAAS,EAAE,kBAAkB;MAC7B,SAAS,EAAE,kBAAkB;MAC7B,UAAU,EAAE,kBAAkB;MAC9B,aAAa,EAAE,kBAAkB;MACjC,UAAU,EAAE,kBAAkB;MAC9B,qBAAqB,EAAE,kBAAkB;MACzC,UAAU,EAAE,kBAAkB;MAC9B,uCAAuC,EAAE,kBAAkB;MAC3D,OAAO,EAAE,kBAAkB;MAC3B,OAAO,EAAE,kBAAkB;MAC3B,SAAS,EAAE,kBAAkB;MAC7B,SAAS,EAAE,kBAAkB;MAC7B,OAAO,EAAE,kBAAkB;MAC3B,UAAU,EAAE,kBAAkB;MAC9B,OAAO,EAAE,kBAAkB;MAC3B,WAAW,EAAE,kBAAkB;MAC/B,OAAO,EAAE,kBAAkB;MAC3B,QAAQ,EAAE,kBAAkB;MAC5B,aAAa,EAAE,kBAAkB;MACjC,eAAe,EAAE,kBAAkB;MACnC,UAAU,EAAE,kBAAkB;MAC9B,UAAU,EAAE,kBAAkB;MAC9B,qBAAqB,EAAE,kBAAkB;MACzC,gCAAgC,EAAE,kBAAkB;MACpD,wCAAwC,EAAE,kBAAkB;MAC5D,2BAA2B,EAAE,kBAAkB;MAC/C,gBAAgB,EAAE,kBAAkB;MACpC,qBAAqB,EAAE,kBAAkB;MACzC,6BAA6B,EAAE,kBAAkB;MACjD,kBAAkB,EAAE,kBAAkB;MACtC,yCAAyC,EAAE,kBAAkB;MAC7D,oBAAoB,EAAE,kBAAkB;MACxC,cAAc,EAAE,kBAAkB;MAClC,QAAQ,EAAE,kBAAkB;MAC5B,wBAAwB,EAAE,kBAAkB;MAC5C,yBAAyB,EAAE,kBAAkB;MAC7C,kBAAkB,EAAE,kBAAkB;MACtC,+BAA+B,EAAE,kBAAkB;MACnD,wBAAwB,EAAE,kBAAkB;MAC5C,aAAa,EAAE,kBAAkB;MACjC,gBAAgB,EAAE,kBAAkB;MACpC,kBAAkB,EAAE,kBAAkB;MACtC,uBAAuB,EAAE,kBAAkB;MAC3C,UAAU,EAAE,kBAAkB;MAC9B,sCAAsC,EAAE,kBAAkB;MAC1D,uBAAuB,EAAE,kBAAkB;MAC3C,kBAAkB,EAAE,kBAAkB;MACtC,uBAAuB,EAAE,kBAAkB;MAC3C,sCAAsC,EAAE,kBAAkB;MAC1D,qCAAqC,EAAE,kBAAkB;MACzD,kCAAkC,EAAE,kBAAkB;MACtD,YAAY,EAAE,kBAAkB;MAChC,kBAAkB,EAAE,kBAAkB;MACtC,QAAQ,EAAE,kBAAkB;MAC5B,qBAAqB,EAAE,kBAAkB;MACzC,UAAU,EAAE,kBAAkB;MAC9B,mBAAmB,EAAE,kBAAkB;MACvC,0BAA0B,EAAE,kBAAkB;MAC9C,yBAAyB,EAAE,kBAAkB;MAC7C,iBAAiB,EAAE,kBAAkB;MACrC,oCAAoC,EAAE,kBAAkB;MACxD,6BAA6B,EAAE,kBAAkB;MACjD,UAAU,EAAE,kBAAkB;MAC9B,UAAU,EAAE,kBAAkB;MAC9B,UAAU,EAAE,kBAAkB;MAC9B,2BAA2B,EAAE,kBAAkB;MAC/C,QAAQ,EAAE,kBAAkB;MAC5B,mBAAmB,EAAE,kBAAkB;MACvC,aAAa,EAAE,kBAAkB;MACjC,8BAA8B,EAAE,kBAAkB;MAClD,iCAAiC,EAAE,kBAAkB;MACrD,mBAAmB,EAAE,kBAAkB;MACvC,oCAAoC,EAAE,kBAAkB;MACxD,yBAAyB,EAAE,kBAAkB;MAC7C,wBAAwB,EAAE,kBAAkB;MAC5C,cAAc,EAAE,kBAAkB;MAClC,aAAa,EAAE,kBAAkB;MACjC,uBAAuB,EAAE,kBAAkB;MAC3C,kBAAkB,EAAE,kBAAkB;MACtC,cAAc,EAAE,kBAAkB;MAClC,UAAU,EAAE,kBAAkB;MAC9B,kBAAkB,EAAE,kBAAkB;MACtC,iBAAiB,EAAE,kBAAkB;MACrC,6BAA6B,EAAE,kBAAkB;MACjD,gBAAgB,EAAE,kBAAkB;MACpC,kBAAkB,EAAE,kBAAkB;MACtC,8BAA8B,EAAE,kBAAkB;MAClD,+BAA+B,EAAE,kBAAkB;MACnD,6BAA6B,EAAE,kBAAkB;MACjD,qBAAqB,EAAE,kBAAkB;MACzC,gBAAgB,EAAE,kBAAkB;MACpC,sBAAsB,EAAE,kBAAkB;MAC1C,yBAAyB,EAAE,kBAAkB;MAC7C,qBAAqB,EAAE,kBAAkB;MACzC,6BAA6B,EAAE,kBAAkB;MACjD,+BAA+B,EAAE,kBAAkB;MACnD,UAAU,EAAE,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACM,CAAC;IAED,SAASC,QAAQA,CAACC,IAAI,EAAE;MAEtB,IAAIC,aAAa,GAAG,CAAC,CAAC;MAEtB,KAAK,IAAIC,GAAG,IAAIJ,iBAAiB,EAAE;QAEjC;QACA,IAAIK,SAAS,GAAGH,IAAI,CAACI,KAAK,CAACN,iBAAiB,CAACI,GAAG,CAAC,CAAC;;QAElD;QACA;QACA;QACA,IAAIG,GAAG,GAAG,CAACF,SAAS,GAAGA,SAAS,CAACG,MAAM,GAAG,CAAC,IAAIN,IAAI,CAACM,MAAM;QAE1DL,aAAa,CAACC,GAAG,CAAC,GAAGG,GAAG;MAE1B;MAEA,OAAOJ,aAAa;IACtB;IAEA,SAASM,QAAQA,CAACP,IAAI,EAAEQ,QAAQ,EAAE;MAEhC,IAAIC,OAAO,GAAGV,QAAQ,CAACC,IAAI,CAAC;;MAE5B;MACA,IAAIS,OAAO,CAAC,kBAAkB,CAAC,GAAGA,OAAO,CAAC,aAAa,CAAC,GAAGA,OAAO,CAAC,2BAA2B,CAAC,IAAI,GAAG,EAAE;QACtGD,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;QACjC;MACF;MAEA,IAAIiC,OAAO,CAAC,kBAAkB,CAAC,IAAI,GAAG,EAAE;QACtCD,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;QACjC;MACF;MAEA,IAAIiC,OAAO,CAAC,UAAU,CAAC,GAAGA,OAAO,CAAC,UAAU,CAAC,GAAGA,OAAO,CAAC,8BAA8B,CAAC,IAAI,GAAG,EAAE;QAC9FD,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;QACjC;MACF;MAEA,IAAIiC,OAAO,CAAC,wBAAwB,CAAC,GAAGA,OAAO,CAAC,UAAU,CAAC,GAAGA,OAAO,CAAC,mBAAmB,CAAC,GAAGA,OAAO,CAAC,iBAAiB,CAAC,IAAI,GAAG,EAAE;QAC9HD,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC;QACjC;MACF;MAEA,IAAIiC,OAAO,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE;QAC9BE,KAAK,CAACX,IAAI,EAAEN,QAAQ,EAAEc,QAAQ,CAAC;QAC/B;MACF;MAEA,IAAIC,OAAO,CAAC,QAAQ,CAAC,GAAGA,OAAO,CAAC,6BAA6B,CAAC,GAAGA,OAAO,CAAC,6BAA6B,CAAC,IAAI,GAAG,EAAE;QAC9GE,KAAK,CAACX,IAAI,EAAEL,MAAM,EAAEa,QAAQ,CAAC;QAC7B;MACF;MAEA,IAAIC,OAAO,CAAC,YAAY,CAAC,IAAI,GAAG,EAAE;QAChCE,KAAK,CAACX,IAAI,EAAEJ,UAAU,EAAEY,QAAQ,CAAC;QACjC;MACF;;MAEA;MACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGzB,UAAU,CAACkB,MAAM,EAAEM,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;QACjD,IAAIH,OAAO,CAACrB,UAAU,CAACwB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;UACpCJ,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAACY,UAAU,CAACwB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;UAC7C;QACF;MACF;;MAEA;MACA,IAAIH,OAAO,CAAC,oBAAoB,CAAC,GAAGA,OAAO,CAAC,kBAAkB,CAAC,GAAGA,OAAO,CAAC,gBAAgB,CAAC,IAAI,GAAG,EAAE;QAClGE,KAAK,CAACX,IAAI,EAAET,cAAc,EAAE,UAASuB,UAAU,EAAE;UAC/C,IAAIA,UAAU,IAAI,IAAI,EAAE;YACtBH,KAAK,CAACX,IAAI,EAAEH,EAAE,EAAEW,QAAQ,CAAC;UAC3B,CAAC,MAAM;YACLA,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAACsC,UAAU,CAAC,CAAC;UACzC;QACF,CAAC,CAAC;QACF;MACF;MAEA,IAAIL,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,EAAE;QAClCE,KAAK,CAACX,IAAI,EAAER,SAAS,EAAEgB,QAAQ,CAAC;QAChC;MACF;MAEAA,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAACa,OAAO,CAAC,CAAC;MACpC;IACF;IAEA,SAASsB,KAAKA,CAACI,MAAM,EAAEC,KAAK,EAAER,QAAQ,EAAE;MAEtC,IAAIO,MAAM,CAACT,MAAM,GAAGtB,UAAU,EAAE;QAC9BwB,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAACa,OAAO,CAAC,CAAC;QACpC;MACF;MAEA,IAAI4B,MAAM,GAAG,CAAC,CAAC;MACf,IAAIC,KAAK,GAAGC,kBAAkB,CAACJ,MAAM,CAAC;MACtC,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGG,KAAK,CAACV,MAAM,EAAEM,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;QAE5C,IAAIQ,IAAI,GAAGJ,KAAK,CAACJ,CAAC,CAAC,CAACS,WAAW,CAAC,CAAC;QAEjC,IAAIC,WAAW,GAAG5C,MAAM,CAAC0C,IAAI,CAAC,IAAI,IAAI;QAEtC,IAAI,CAACE,WAAW,EAAE;UAChB;QACF;QAEAL,MAAM,CAACG,IAAI,CAAC,GAAGG,QAAQ,CAACL,KAAK,EAAEI,WAAW,CAAC;MAE7C;MAEA,IAAIE,SAAS,GAAG,EAAE;MAClB,KAAK,IAAIC,KAAK,IAAIR,MAAM,EAAE;QACxBO,SAAS,CAACE,IAAI,CAAC,CAACD,KAAK,EAAER,MAAM,CAACQ,KAAK,CAAC,CAAC,CAAC;MACxC;MAEA,IAAID,SAAS,CAAClB,MAAM,IAAI,CAAC,EAAE;QACzBE,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAACa,OAAO,CAAC,CAAC;QACpC;MACF;;MAEA;MACA,IAAIsC,YAAY,GAAGH,SAAS,CAACI,IAAI,CAAC,UAASC,IAAI,EAAEC,IAAI,EAAE;QACrD,OAAOD,IAAI,CAAC,CAAC,CAAC,GAAGC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC;;MAEF;MACAtB,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAACmD,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/C;IACF;IAEA,SAASR,kBAAkBA,CAACY,OAAO,EAAE;MACnC;MACA,IAAIC,QAAQ,GAAG,CAAC,CAAC;QACbC,cAAc,GAAG,EAAE;MACvB,IAAIF,OAAO,GAAGA,OAAO,CAACV,WAAW,CAAC,CAAC;MAEnC,IAAIa,UAAU,GAAGH,OAAO,CAACI,KAAK,CAAC,EAAE,CAAC;MAClC,KAAK,IAAIvB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGqB,UAAU,CAAC5B,MAAM,GAAG,CAAC,EAAEM,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;QACrD,IAAIwB,UAAU,GAAGF,UAAU,CAACtB,CAAC,CAAC,GAAGsB,UAAU,CAACtB,CAAC,GAAG,CAAC,CAAC,GAAGsB,UAAU,CAACtB,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;QAC3E,IAAI,CAACoB,QAAQ,CAACI,UAAU,CAAC,EAAE;UACzBJ,QAAQ,CAACI,UAAU,CAAC,GAAG,CAAC;QAC1B,CAAC,MAAM;UACLJ,QAAQ,CAACI,UAAU,CAAC,IAAI,CAAC;QAC3B;MACF;;MAEA;MACA,KAAK,IAAIxB,CAAC,IAAIoB,QAAQ,EAAE;QACtBC,cAAc,CAACA,cAAc,CAAC3B,MAAM,CAAC,GAAG,CAACM,CAAC,EAAEoB,QAAQ,CAACpB,CAAC,CAAC,CAAC;MAC1D;;MAEA;MACA,OAAOqB,cAAc,CAACL,IAAI,CAAC,UAASC,IAAI,EAAEC,IAAI,EAAE;QAC9C,OAAOA,IAAI,CAAC,CAAC,CAAC,GAAGD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC;IACJ;IAEA,SAASN,QAAQA,CAACL,KAAK,EAAEI,WAAW,EAAE;MACpC;MACA,IAAIe,IAAI,GAAG,CAAC;MAEZ,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGK,KAAK,CAACZ,MAAM,EAAEM,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAE,EAAE;QAE5C,IAAIU,WAAW,CAACJ,KAAK,CAACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UAE5ByB,IAAI,IAAIC,IAAI,CAACC,GAAG,CAACrB,KAAK,CAACN,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGU,WAAW,CAACJ,KAAK,CAACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE1D,CAAC,MAAM;UAELyB,IAAI,IAAIpD,SAAS;QAEnB;MAEF;MAEA,OAAOoD,IAAI;IACb;IAEA,OAAO;MACLG,MAAM,EAAE,SAAAA,CAASxC,IAAI,EAAEQ,QAAQ,EAAE;QAC/B;;QAEA,IAAI,CAACR,IAAI,EAAE;UACTQ,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAACa,OAAO,CAAC,CAAC;UACpC;QACF;QAEAW,IAAI,GAAGA,IAAI,CAACyC,MAAM,CAAC,CAAC,EAAE1D,UAAU,CAAC,CAAC2D,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC;QAEjEnC,QAAQ,CAACP,IAAI,EAAEQ,QAAQ,CAAC;MAE1B,CAAC;MACDmC,IAAI,EAAE,SAAAA,CAAS3C,IAAI,EAAEQ,QAAQ,EAAE;QAC7B;;QAEA,IAAI,CAACgC,MAAM,CAACxC,IAAI,EAAE,UAAS4C,QAAQ,EAAE;UAEnC,IAAIA,QAAQ,KAAKvD,OAAO,EAAE;YACtBmB,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAAC,CAAEa,OAAO,EAAEA,OAAO,EAAEA,OAAO,CAAE,CAAC,CAAC;YAC1D;UACJ;UAEAmB,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAExB,CAAEoE,QAAQ,EAAEzD,QAAQ,CAACyD,QAAQ,CAAC,EAAE1D,QAAQ,CAAC0D,QAAQ,CAAC,CAAE,CAErD,CAAC;UAAC;QAEL,CAAC,CAAC;MAEJ,CAAC;MACDC,IAAI,EAAE,SAAAA,CAAS7C,IAAI,EAAEQ,QAAQ,EAAE;QAC7B;;QAEA,IAAI,CAACgC,MAAM,CAACxC,IAAI,EAAE,UAAS4C,QAAQ,EAAE;UAEnC,IAAIA,QAAQ,KAAKvD,OAAO,EAAE;YACxBmB,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAAE,CAAC,CAAC,CAAE,CAAC;YAAC;YAClC;UACF;UAEAgC,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAExBW,QAAQ,CAACyD,QAAQ,CAAC,CAEnB,CAAC;QAEJ,CAAC,CAAC;MAEJ,CAAC;MACDE,IAAI,EAAE,SAAAA,CAAS9C,IAAI,EAAEQ,QAAQ,EAAE;QAC7B;;QAEA,IAAI,CAACgC,MAAM,CAACxC,IAAI,EAAE,UAAS4C,QAAQ,EAAE;UAEnC,IAAIA,QAAQ,KAAKvD,OAAO,EAAE;YACxBmB,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAAEa,OAAO,CAAE,CAAC;YAAC;YACvC;UACF;UAEAmB,QAAQ,CAACE,KAAK,CAAClC,SAAS,EAAE,CAExBU,QAAQ,CAAC0D,QAAQ,CAAC,CAEnB,CAAC;QAEJ,CAAC,CAAC;MAEJ;IACF,CAAC;EAEL,CAAC;EAEDrE,MAAM,CAACE,aAAa,GAAG,CAACF,MAAM,CAACK,MAAM,IAAI,CAAC,CAAC,EAAEC,OAAO,GAAG,IAAIJ,aAAa,CAAC,CAAC;AAE5E,CAAC,EAAE,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}