{"ast":null,"code":"import isQuestion from './questions.js';\nimport parse from './parse/index.js';\nimport toPast from './conjugate/toPast.js';\nimport toPresent from './conjugate/toPresent.js';\nimport toFuture from './conjugate/toFuture.js';\nimport { toNegative, toPositive } from './conjugate/toNegative.js';\nimport toInfinitive from './conjugate/toInfinitive.js';\nconst api = function (View) {\n  class Sentences extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups);\n      this.viewType = 'Sentences';\n    }\n    json() {\n      let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.map(m => {\n        let json = m.toView().json(opts)[0] || {};\n        let {\n          subj,\n          verb,\n          pred,\n          grammar\n        } = parse(m);\n        json.sentence = {\n          subject: subj.text('normal'),\n          verb: verb.text('normal'),\n          predicate: pred.text('normal'),\n          grammar\n        };\n        return json;\n      }, []);\n    }\n    toPastTense(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s);\n        return toPast(s, parsed);\n      });\n    }\n    toPresentTense(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s);\n        return toPresent(s, parsed);\n      });\n    }\n    toFutureTense(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s);\n        s = toFuture(s, parsed);\n        return s;\n      });\n    }\n    toInfinitive(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s);\n        return toInfinitive(s, parsed);\n      });\n    }\n    toNegative(n) {\n      return this.getNth(n).map(vb => {\n        let parsed = parse(vb);\n        return toNegative(vb, parsed);\n      });\n    }\n    toPositive(n) {\n      return this.getNth(n).map(vb => {\n        let parsed = parse(vb);\n        return toPositive(vb, parsed);\n      });\n    }\n    isQuestion(n) {\n      return this.questions(n);\n    }\n    isExclamation(n) {\n      let res = this.filter(s => s.lastTerm().has('@hasExclamation'));\n      return res.getNth(n);\n    }\n    isStatement(n) {\n      let res = this.filter(s => !s.isExclamation().found && !s.isQuestion().found);\n      return res.getNth(n);\n    }\n    // overloaded - keep Sentences class\n    update(pointer) {\n      let m = new Sentences(this.document, pointer);\n      m._cache = this._cache; // share this full thing\n      return m;\n    }\n  }\n  // aliases\n  Sentences.prototype.toPresent = Sentences.prototype.toPresentTense;\n  Sentences.prototype.toPast = Sentences.prototype.toPastTense;\n  Sentences.prototype.toFuture = Sentences.prototype.toFutureTense;\n  const methods = {\n    sentences: function (n) {\n      let m = this.map(s => s.fullSentence());\n      m = m.getNth(n);\n      return new Sentences(this.document, m.pointer);\n    },\n    questions: function (n) {\n      let m = isQuestion(this);\n      return m.getNth(n);\n    }\n  };\n  Object.assign(View.prototype, methods);\n};\nexport default api;","map":{"version":3,"names":["isQuestion","parse","toPast","toPresent","toFuture","toNegative","toPositive","toInfinitive","api","View","Sentences","constructor","document","pointer","groups","viewType","json","opts","arguments","length","undefined","map","m","toView","subj","verb","pred","grammar","sentence","subject","text","predicate","toPastTense","n","getNth","s","parsed","toPresentTense","toFutureTense","vb","questions","isExclamation","res","filter","lastTerm","has","isStatement","found","update","_cache","prototype","methods","sentences","fullSentence","Object","assign"],"sources":["C:/Users/swths/node_modules/compromise/src/3-three/sentences/api.js"],"sourcesContent":["import isQuestion from './questions.js'\nimport parse from './parse/index.js'\nimport toPast from './conjugate/toPast.js'\nimport toPresent from './conjugate/toPresent.js'\nimport toFuture from './conjugate/toFuture.js'\nimport { toNegative, toPositive } from './conjugate/toNegative.js'\nimport toInfinitive from './conjugate/toInfinitive.js'\n\nconst api = function (View) {\n  class Sentences extends View {\n    constructor(document, pointer, groups) {\n      super(document, pointer, groups)\n      this.viewType = 'Sentences'\n    }\n    json(opts = {}) {\n      return this.map(m => {\n        let json = m.toView().json(opts)[0] || {}\n        let { subj, verb, pred, grammar } = parse(m)\n        json.sentence = {\n          subject: subj.text('normal'),\n          verb: verb.text('normal'),\n          predicate: pred.text('normal'),\n          grammar\n        }\n        return json\n      }, [])\n    }\n    toPastTense(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s)\n        return toPast(s, parsed)\n      })\n    }\n    toPresentTense(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s)\n        return toPresent(s, parsed)\n      })\n    }\n    toFutureTense(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s)\n        s = toFuture(s, parsed)\n        return s\n      })\n    }\n    toInfinitive(n) {\n      return this.getNth(n).map(s => {\n        let parsed = parse(s)\n        return toInfinitive(s, parsed)\n      })\n    }\n    toNegative(n) {\n      return this.getNth(n).map(vb => {\n        let parsed = parse(vb)\n        return toNegative(vb, parsed)\n      })\n    }\n    toPositive(n) {\n      return this.getNth(n).map(vb => {\n        let parsed = parse(vb)\n        return toPositive(vb, parsed)\n      })\n    }\n    isQuestion(n) {\n      return this.questions(n)\n    }\n    isExclamation(n) {\n      let res = this.filter(s => s.lastTerm().has('@hasExclamation'))\n      return res.getNth(n)\n    }\n    isStatement(n) {\n      let res = this.filter(s => !s.isExclamation().found && !s.isQuestion().found)\n      return res.getNth(n)\n    }\n    // overloaded - keep Sentences class\n    update(pointer) {\n      let m = new Sentences(this.document, pointer)\n      m._cache = this._cache // share this full thing\n      return m\n    }\n  }\n  // aliases\n  Sentences.prototype.toPresent = Sentences.prototype.toPresentTense\n  Sentences.prototype.toPast = Sentences.prototype.toPastTense\n  Sentences.prototype.toFuture = Sentences.prototype.toFutureTense\n\n  const methods = {\n    sentences: function (n) {\n      let m = this.map(s => s.fullSentence())\n      m = m.getNth(n)\n      return new Sentences(this.document, m.pointer)\n    },\n    questions: function (n) {\n      let m = isQuestion(this)\n      return m.getNth(n)\n    },\n  }\n\n  Object.assign(View.prototype, methods)\n}\nexport default api\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}