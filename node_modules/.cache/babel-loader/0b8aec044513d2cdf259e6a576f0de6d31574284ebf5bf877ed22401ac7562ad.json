{"ast":null,"code":"import keyVal from './key-val.js';\nconst pack = function (obj) {\n  let byVal = {};\n  Object.keys(obj).forEach(k => {\n    let val = obj[k];\n    byVal[val] = byVal[val] || [];\n    byVal[val].push(k);\n  });\n  let out = [];\n  Object.keys(byVal).forEach(val => {\n    out.push(\"\".concat(val, \":\").concat(byVal[val].join(',')));\n  });\n  return out.join('¦');\n};\nconst packObj = function () {\n  let obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let tmp = {};\n  Object.keys(obj).forEach(k => {\n    let val = keyVal(k, obj[k]); // compress any shared prefix\n    tmp[k] = val;\n  });\n  return pack(tmp);\n};\nconst compress = function (model) {\n  let out = {\n    fwd: packObj(model.fwd),\n    both: packObj(model.both),\n    rev: packObj(model.rev),\n    ex: packObj(model.ex)\n  };\n  return out;\n};\nexport default compress;\n\n// let model = {\n//   fwd: {\n//     foo: 'food',\n//     bar: 'bard',\n//     cool: 'nice'\n//   }\n// }\n// console.log(compress(model))","map":{"version":3,"names":["keyVal","pack","obj","byVal","Object","keys","forEach","k","val","push","out","concat","join","packObj","arguments","length","undefined","tmp","compress","model","fwd","both","rev","ex"],"sources":["C:/Users/swths/node_modules/suffix-thumb/src/compress/pack.js"],"sourcesContent":["import keyVal from './key-val.js'\n\nconst pack = function (obj) {\n  let byVal = {}\n  Object.keys(obj).forEach(k => {\n    let val = obj[k]\n    byVal[val] = byVal[val] || []\n    byVal[val].push(k)\n  })\n  let out = []\n  Object.keys(byVal).forEach(val => {\n    out.push(`${val}:${byVal[val].join(',')}`)\n  })\n  return out.join('¦')\n}\n\nconst packObj = function (obj = {}) {\n  let tmp = {}\n  Object.keys(obj).forEach(k => {\n    let val = keyVal(k, obj[k])// compress any shared prefix\n    tmp[k] = val\n  })\n  return pack(tmp)\n}\n\nconst compress = function (model) {\n  let out = {\n    fwd: packObj(model.fwd),\n    both: packObj(model.both),\n    rev: packObj(model.rev),\n    ex: packObj(model.ex),\n  }\n  return out\n}\nexport default compress\n\n\n// let model = {\n//   fwd: {\n//     foo: 'food',\n//     bar: 'bard',\n//     cool: 'nice'\n//   }\n// }\n// console.log(compress(model))"],"mappings":"AAAA,OAAOA,MAAM,MAAM,cAAc;AAEjC,MAAMC,IAAI,GAAG,SAAAA,CAAUC,GAAG,EAAE;EAC1B,IAAIC,KAAK,GAAG,CAAC,CAAC;EACdC,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,CAACI,OAAO,CAACC,CAAC,IAAI;IAC5B,IAAIC,GAAG,GAAGN,GAAG,CAACK,CAAC,CAAC;IAChBJ,KAAK,CAACK,GAAG,CAAC,GAAGL,KAAK,CAACK,GAAG,CAAC,IAAI,EAAE;IAC7BL,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,CAACF,CAAC,CAAC;EACpB,CAAC,CAAC;EACF,IAAIG,GAAG,GAAG,EAAE;EACZN,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,OAAO,CAACE,GAAG,IAAI;IAChCE,GAAG,CAACD,IAAI,IAAAE,MAAA,CAAIH,GAAG,OAAAG,MAAA,CAAIR,KAAK,CAACK,GAAG,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;EAC5C,CAAC,CAAC;EACF,OAAOF,GAAG,CAACE,IAAI,CAAC,GAAG,CAAC;AACtB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAoB;EAAA,IAAVX,GAAG,GAAAY,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChC,IAAIG,GAAG,GAAG,CAAC,CAAC;EACZb,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC,CAACI,OAAO,CAACC,CAAC,IAAI;IAC5B,IAAIC,GAAG,GAAGR,MAAM,CAACO,CAAC,EAAEL,GAAG,CAACK,CAAC,CAAC,CAAC;IAC3BU,GAAG,CAACV,CAAC,CAAC,GAAGC,GAAG;EACd,CAAC,CAAC;EACF,OAAOP,IAAI,CAACgB,GAAG,CAAC;AAClB,CAAC;AAED,MAAMC,QAAQ,GAAG,SAAAA,CAAUC,KAAK,EAAE;EAChC,IAAIT,GAAG,GAAG;IACRU,GAAG,EAAEP,OAAO,CAACM,KAAK,CAACC,GAAG,CAAC;IACvBC,IAAI,EAAER,OAAO,CAACM,KAAK,CAACE,IAAI,CAAC;IACzBC,GAAG,EAAET,OAAO,CAACM,KAAK,CAACG,GAAG,CAAC;IACvBC,EAAE,EAAEV,OAAO,CAACM,KAAK,CAACI,EAAE;EACtB,CAAC;EACD,OAAOb,GAAG;AACZ,CAAC;AACD,eAAeQ,QAAQ;;AAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}