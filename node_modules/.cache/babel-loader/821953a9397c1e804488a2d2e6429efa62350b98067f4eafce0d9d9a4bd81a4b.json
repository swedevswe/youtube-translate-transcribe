{"ast":null,"code":"import fillTags from './_fillTags.js';\nconst env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env; // eslint-disable-line\nimport adhoc from './_adhoc.js';\nconst prefix = /^(under|over|mis|re|un|dis|semi)-?/;\nconst checkWord = (term, obj) => {\n  if (!term || !obj) {\n    return null;\n  }\n  let str = term.normal || term.implicit;\n  let found = null;\n  if (obj.hasOwnProperty(str)) {\n    found = obj[str];\n  }\n  if (found && env.DEBUG_TAGS) {\n    console.log(\"\\n  \\x1B[2m\\x1B[3m     \\u2193 - '\".concat(str, \"' \\x1B[0m\")); //eslint-disable-line\n  }\n  return found;\n};\nconst checkTag = function (term) {\n  let obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let tagSet = arguments.length > 2 ? arguments[2] : undefined;\n  if (!term || !obj) {\n    return null;\n  }\n  // rough sort, so 'Noun' is after ProperNoun, etc\n  let tags = Array.from(term.tags).sort((a, b) => {\n    let numA = tagSet[a] ? tagSet[a].parents.length : 0;\n    let numB = tagSet[b] ? tagSet[b].parents.length : 0;\n    return numA > numB ? -1 : 1;\n  });\n  let found = tags.find(tag => obj[tag]);\n  if (found && env.DEBUG_TAGS) {\n    console.log(\"  \\x1B[2m\\x1B[3m      \\u2193 - '\".concat(term.normal || term.implicit, \"' (#\").concat(found, \")  \\x1B[0m\")); //eslint-disable-line\n  }\n  found = obj[found];\n  return found;\n};\nconst pickTag = function (terms, i, clues, model) {\n  var _terms;\n  if (!clues) {\n    return null;\n  }\n  const beforeIndex = ((_terms = terms[i - 1]) === null || _terms === void 0 ? void 0 : _terms.text) !== 'also' ? i - 1 : Math.max(0, i - 2);\n  const tagSet = model.one.tagSet;\n  // look -> right word, first\n  let tag = checkWord(terms[i + 1], clues.afterWords);\n  // look <- left word, second\n  tag = tag || checkWord(terms[beforeIndex], clues.beforeWords);\n  // look <- left tag\n  tag = tag || checkTag(terms[beforeIndex], clues.beforeTags, tagSet);\n  // look -> right tag\n  tag = tag || checkTag(terms[i + 1], clues.afterTags, tagSet);\n  // console.log(clues)\n  return tag;\n};\n\n// words like 'bob' that can change between two tags\nconst doSwitches = function (terms, i, world) {\n  const model = world.model;\n  const setTag = world.methods.one.setTag;\n  const {\n    switches,\n    clues\n  } = model.two;\n  const term = terms[i];\n  let str = term.normal || term.implicit || '';\n  // support prefixes for switching words\n  if (prefix.test(str) && !switches[str]) {\n    str = str.replace(prefix, ''); // could use some guards, here\n  }\n  if (term.switch) {\n    let form = term.switch;\n    // skip propernouns, acronyms, etc\n    if (term.tags.has('Acronym') || term.tags.has('PhrasalVerb')) {\n      return;\n    }\n    let tag = pickTag(terms, i, clues[form], model);\n    // lean-harder on some variable forms\n    if (adhoc[form]) {\n      tag = adhoc[form](terms, i) || tag;\n    }\n    // did we find anything?\n    if (tag) {\n      // tag it\n      setTag([term], tag, world, null, \"3-[switch] (\".concat(form, \")\"));\n      // add plural/singular etc.\n      fillTags(terms, i, model);\n    } else if (env.DEBUG_TAGS) {\n      console.log(\"\\n -> X  - '\".concat(str, \"'  : (\").concat(form, \")  \")); //eslint-disable-line\n    }\n  }\n};\nexport default doSwitches;","map":{"version":3,"names":["fillTags","env","process","self","adhoc","prefix","checkWord","term","obj","str","normal","implicit","found","hasOwnProperty","DEBUG_TAGS","console","log","concat","checkTag","arguments","length","undefined","tagSet","tags","Array","from","sort","a","b","numA","parents","numB","find","tag","pickTag","terms","i","clues","model","_terms","beforeIndex","text","Math","max","one","afterWords","beforeWords","beforeTags","afterTags","doSwitches","world","setTag","methods","switches","two","test","replace","switch","form","has"],"sources":["C:/Users/swths/node_modules/compromise/src/2-two/preTagger/compute/tagger/3rd-pass/06-switches.js"],"sourcesContent":["import fillTags from './_fillTags.js'\nconst env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env // eslint-disable-line\nimport adhoc from './_adhoc.js'\nconst prefix = /^(under|over|mis|re|un|dis|semi)-?/\n\nconst checkWord = (term, obj) => {\n  if (!term || !obj) {\n    return null\n  }\n  let str = term.normal || term.implicit\n  let found = null\n  if (obj.hasOwnProperty(str)) {\n    found = obj[str]\n  }\n  if (found && env.DEBUG_TAGS) {\n    console.log(`\\n  \\x1b[2m\\x1b[3m     ↓ - '${str}' \\x1b[0m`) //eslint-disable-line\n  }\n  return found\n}\n\nconst checkTag = (term, obj = {}, tagSet) => {\n  if (!term || !obj) {\n    return null\n  }\n  // rough sort, so 'Noun' is after ProperNoun, etc\n  let tags = Array.from(term.tags).sort((a, b) => {\n    let numA = tagSet[a] ? tagSet[a].parents.length : 0\n    let numB = tagSet[b] ? tagSet[b].parents.length : 0\n    return numA > numB ? -1 : 1\n  })\n  let found = tags.find(tag => obj[tag])\n  if (found && env.DEBUG_TAGS) {\n    console.log(`  \\x1b[2m\\x1b[3m      ↓ - '${term.normal || term.implicit}' (#${found})  \\x1b[0m`) //eslint-disable-line\n  }\n  found = obj[found]\n  return found\n}\n\nconst pickTag = function (terms, i, clues, model) {\n  if (!clues) {\n    return null\n  }\n  const beforeIndex = terms[i - 1]?.text !== 'also' ? i - 1 : Math.max(0, i - 2)\n  const tagSet = model.one.tagSet\n  // look -> right word, first\n  let tag = checkWord(terms[i + 1], clues.afterWords)\n  // look <- left word, second\n  tag = tag || checkWord(terms[beforeIndex], clues.beforeWords)\n  // look <- left tag\n  tag = tag || checkTag(terms[beforeIndex], clues.beforeTags, tagSet)\n  // look -> right tag\n  tag = tag || checkTag(terms[i + 1], clues.afterTags, tagSet)\n  // console.log(clues)\n  return tag\n}\n\n// words like 'bob' that can change between two tags\nconst doSwitches = function (terms, i, world) {\n  const model = world.model\n  const setTag = world.methods.one.setTag\n  const { switches, clues } = model.two\n  const term = terms[i]\n  let str = term.normal || term.implicit || ''\n  // support prefixes for switching words\n  if (prefix.test(str) && !switches[str]) {\n    str = str.replace(prefix, '') // could use some guards, here\n  }\n  if (term.switch) {\n    let form = term.switch\n    // skip propernouns, acronyms, etc\n    if (term.tags.has('Acronym') || term.tags.has('PhrasalVerb')) {\n      return\n    }\n    let tag = pickTag(terms, i, clues[form], model)\n    // lean-harder on some variable forms\n    if (adhoc[form]) {\n      tag = adhoc[form](terms, i) || tag\n    }\n    // did we find anything?\n    if (tag) {\n      // tag it\n      setTag([term], tag, world, null, `3-[switch] (${form})`)\n      // add plural/singular etc.\n      fillTags(terms, i, model)\n    } else if (env.DEBUG_TAGS) {\n      console.log(`\\n -> X  - '${str}'  : (${form})  `) //eslint-disable-line\n    }\n  }\n}\nexport default doSwitches\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}