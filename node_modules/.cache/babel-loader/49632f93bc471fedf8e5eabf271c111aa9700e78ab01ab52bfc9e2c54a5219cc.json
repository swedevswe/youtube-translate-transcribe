{"ast":null,"code":"import React,{useState}from'react';import axios from'axios';import{PayPalButtons,PayPalScriptProvider}from'@paypal/react-paypal-js';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TranscriptForm=()=>{const[url,setUrl]=useState('');const[message,setMessage]=useState('');const[transcript,setTranscript]=useState('');const[isPaymentReady,setIsPaymentReady]=useState(false);const handleUrlChange=e=>{setUrl(e.target.value);};const handleSubmit=async e=>{e.preventDefault();setMessage('Processing...');const videoId=extractVideoId(url);const audioContext=new(window.AudioContext||window.webkitAudioContext)();try{const audioBuffer=await fetchAudioStream(videoId,audioContext);const generatedTranscript=await processAudioStream(audioBuffer);setTranscript(generatedTranscript);setMessage('Transcript ready. Please make the payment to download.');setIsPaymentReady(true);}catch(error){setMessage('Error processing audio');}};const extractVideoId=url=>{const urlObj=new URL(url);return urlObj.searchParams.get('v');};const fetchAudioStream=async(videoId,audioContext)=>{const response=await axios.get(\"/api/get-audio-stream?videoId=\".concat(videoId),{responseType:'arraybuffer'});const audioBuffer=await audioContext.decodeAudioData(response.data);return audioBuffer;};const processAudioStream=async audioBuffer=>{return new Promise((resolve,reject)=>{const recognition=new(window.SpeechRecognition||window.webkitSpeechRecognition)();recognition.lang='en-US';recognition.interimResults=false;recognition.maxAlternatives=1;recognition.onresult=event=>{const transcript=event.results[0][0].transcript;resolve(transcript);};recognition.onerror=event=>{reject(event.error);};recognition.onend=()=>{reject('Speech recognition ended without results');};const source=audioContext.createBufferSource();source.buffer=audioBuffer;source.connect(audioContext.destination);const mediaStreamDestination=audioContext.createMediaStreamDestination();source.connect(mediaStreamDestination);const mediaRecorder=new MediaRecorder(mediaStreamDestination.stream);const chunks=[];mediaRecorder.ondataavailable=e=>{chunks.push(e.data);};mediaRecorder.onstop=()=>{const blob=new Blob(chunks,{type:'audio/webm'});const audioUrl=URL.createObjectURL(blob);const audio=new Audio(audioUrl);audio.play();recognition.start();};mediaRecorder.start();source.start(0);setTimeout(()=>{mediaRecorder.stop();source.stop();},audioBuffer.duration*1000);});};const handlePaymentSuccess=()=>{setMessage('Payment successful. Download your transcript below.');setIsPaymentReady(false);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"YouTube URL:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:url,onChange:handleUrlChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Get Transcript\"})]}),message&&/*#__PURE__*/_jsx(\"p\",{children:message}),isPaymentReady&&/*#__PURE__*/_jsx(PayPalScriptProvider,{options:{\"client-id\":\"YOUR_PAYPAL_CLIENT_ID\"},children:/*#__PURE__*/_jsx(PayPalButtons,{style:{layout:'vertical'},createOrder:(data,actions)=>{return actions.order.create({purchase_units:[{amount:{value:\"5.00\"// Set the correct amount\n}}]});},onApprove:(data,actions)=>{return actions.order.capture().then(handlePaymentSuccess);}})}),message==='Payment successful. Download your transcript below.'&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:transcript}),/*#__PURE__*/_jsx(\"a\",{href:\"data:text/plain;charset=utf-8,\".concat(encodeURIComponent(transcript)),download:\"transcript.txt\",children:\"Download Transcript\"})]})]});};export default TranscriptForm;","map":{"version":3,"names":["React","useState","axios","PayPalButtons","PayPalScriptProvider","jsx","_jsx","jsxs","_jsxs","TranscriptForm","url","setUrl","message","setMessage","transcript","setTranscript","isPaymentReady","setIsPaymentReady","handleUrlChange","e","target","value","handleSubmit","preventDefault","videoId","extractVideoId","audioContext","window","AudioContext","webkitAudioContext","audioBuffer","fetchAudioStream","generatedTranscript","processAudioStream","error","urlObj","URL","searchParams","get","response","concat","responseType","decodeAudioData","data","Promise","resolve","reject","recognition","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","onresult","event","results","onerror","onend","source","createBufferSource","buffer","connect","destination","mediaStreamDestination","createMediaStreamDestination","mediaRecorder","MediaRecorder","stream","chunks","ondataavailable","push","onstop","blob","Blob","type","audioUrl","createObjectURL","audio","Audio","play","start","setTimeout","stop","duration","handlePaymentSuccess","children","onSubmit","onChange","required","options","style","layout","createOrder","actions","order","create","purchase_units","amount","onApprove","capture","then","href","encodeURIComponent","download"],"sources":["C:/Users/swths/OneDrive/Documents/youtube-transcriber/youtube-transcriber/client/src/components/TranscriptForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButtons, PayPalScriptProvider } from '@paypal/react-paypal-js';\r\n\r\nconst TranscriptForm = () => {\r\n    const [url, setUrl] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [transcript, setTranscript] = useState('');\r\n    const [isPaymentReady, setIsPaymentReady] = useState(false);\r\n\r\n    const handleUrlChange = (e) => {\r\n        setUrl(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage('Processing...');\r\n\r\n        const videoId = extractVideoId(url);\r\n\r\n        const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n        try {\r\n            const audioBuffer = await fetchAudioStream(videoId, audioContext);\r\n            const generatedTranscript = await processAudioStream(audioBuffer);\r\n            setTranscript(generatedTranscript);\r\n            setMessage('Transcript ready. Please make the payment to download.');\r\n            setIsPaymentReady(true);\r\n        } catch (error) {\r\n            setMessage('Error processing audio');\r\n        }\r\n    };\r\n\r\n    const extractVideoId = (url) => {\r\n        const urlObj = new URL(url);\r\n        return urlObj.searchParams.get('v');\r\n    };\r\n\r\n    const fetchAudioStream = async (videoId, audioContext) => {\r\n        const response = await axios.get(`/api/get-audio-stream?videoId=${videoId}`, { responseType: 'arraybuffer' });\r\n        const audioBuffer = await audioContext.decodeAudioData(response.data);\r\n        return audioBuffer;\r\n    };\r\n\r\n    const processAudioStream = async (audioBuffer) => {\r\n        return new Promise((resolve, reject) => {\r\n            const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();\r\n            recognition.lang = 'en-US';\r\n            recognition.interimResults = false;\r\n            recognition.maxAlternatives = 1;\r\n\r\n            recognition.onresult = (event) => {\r\n                const transcript = event.results[0][0].transcript;\r\n                resolve(transcript);\r\n            };\r\n\r\n            recognition.onerror = (event) => {\r\n                reject(event.error);\r\n            };\r\n\r\n            recognition.onend = () => {\r\n                reject('Speech recognition ended without results');\r\n            };\r\n\r\n            const source = audioContext.createBufferSource();\r\n            source.buffer = audioBuffer;\r\n            source.connect(audioContext.destination);\r\n\r\n            const mediaStreamDestination = audioContext.createMediaStreamDestination();\r\n            source.connect(mediaStreamDestination);\r\n\r\n            const mediaRecorder = new MediaRecorder(mediaStreamDestination.stream);\r\n            const chunks = [];\r\n\r\n            mediaRecorder.ondataavailable = (e) => {\r\n                chunks.push(e.data);\r\n            };\r\n\r\n            mediaRecorder.onstop = () => {\r\n                const blob = new Blob(chunks, { type: 'audio/webm' });\r\n                const audioUrl = URL.createObjectURL(blob);\r\n                const audio = new Audio(audioUrl);\r\n                audio.play();\r\n\r\n                recognition.start();\r\n            };\r\n\r\n            mediaRecorder.start();\r\n            source.start(0);\r\n\r\n            setTimeout(() => {\r\n                mediaRecorder.stop();\r\n                source.stop();\r\n            }, audioBuffer.duration * 1000);\r\n        });\r\n    };\r\n\r\n    const handlePaymentSuccess = () => {\r\n        setMessage('Payment successful. Download your transcript below.');\r\n        setIsPaymentReady(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>\r\n                    YouTube URL:\r\n                    <input type=\"text\" value={url} onChange={handleUrlChange} required />\r\n                </label>\r\n                <button type=\"submit\">Get Transcript</button>\r\n            </form>\r\n            {message && <p>{message}</p>}\r\n            {isPaymentReady && (\r\n                <PayPalScriptProvider options={{ \"client-id\": \"YOUR_PAYPAL_CLIENT_ID\" }}>\r\n                    <PayPalButtons\r\n                        style={{ layout: 'vertical' }}\r\n                        createOrder={(data, actions) => {\r\n                            return actions.order.create({\r\n                                purchase_units: [{\r\n                                    amount: {\r\n                                        value: \"5.00\" // Set the correct amount\r\n                                    }\r\n                                }]\r\n                            });\r\n                        }}\r\n                        onApprove={(data, actions) => {\r\n                            return actions.order.capture().then(handlePaymentSuccess);\r\n                        }}\r\n                    />\r\n                </PayPalScriptProvider>\r\n            )}\r\n            {message === 'Payment successful. Download your transcript below.' && (\r\n                <div>\r\n                    <p>{transcript}</p>\r\n                    <a\r\n                        href={`data:text/plain;charset=utf-8,${encodeURIComponent(transcript)}`}\r\n                        download=\"transcript.txt\"\r\n                    >\r\n                        Download Transcript\r\n                    </a>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TranscriptForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}