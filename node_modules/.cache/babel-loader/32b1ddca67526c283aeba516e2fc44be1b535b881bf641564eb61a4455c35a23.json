{"ast":null,"code":"// verbose-mode tagger debuging\nconst log = function (term, tag) {\n  let reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  const yellow = str => '\\x1b[33m\\x1b[3m' + str + '\\x1b[0m';\n  const i = str => '\\x1b[3m' + str + '\\x1b[0m';\n  let word = term.text || '[' + term.implicit + ']';\n  if (typeof tag !== 'string' && tag.length > 2) {\n    tag = tag.slice(0, 2).join(', #') + ' +'; //truncate the list of tags\n  }\n  tag = typeof tag !== 'string' ? tag.join(', #') : tag;\n  console.log(\" \".concat(yellow(word).padEnd(24), \" \\x1B[32m\\u2192\\x1B[0m #\").concat(tag.padEnd(22), \"  \").concat(i(reason))); // eslint-disable-line\n};\n\n// a faster version than the user-facing one in ./methods\nconst fastTag = function (term, tag, reason) {\n  if (!tag || tag.length === 0) {\n    return;\n  }\n  if (term.frozen === true) {\n    return;\n  }\n  // some logging for debugging\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env;\n  if (env && env.DEBUG_TAGS) {\n    log(term, tag, reason);\n  }\n  term.tags = term.tags || new Set();\n  if (typeof tag === 'string') {\n    term.tags.add(tag);\n  } else {\n    tag.forEach(tg => term.tags.add(tg));\n  }\n};\nexport default fastTag;","map":{"version":3,"names":["log","term","tag","reason","arguments","length","undefined","yellow","str","i","word","text","implicit","slice","join","console","concat","padEnd","fastTag","frozen","env","process","self","DEBUG_TAGS","tags","Set","add","forEach","tg"],"sources":["C:/Users/swths/node_modules/compromise/src/2-two/preTagger/compute/tagger/_fastTag.js"],"sourcesContent":["// verbose-mode tagger debuging\nconst log = (term, tag, reason = '') => {\n  const yellow = str => '\\x1b[33m\\x1b[3m' + str + '\\x1b[0m'\n  const i = str => '\\x1b[3m' + str + '\\x1b[0m'\n  let word = term.text || '[' + term.implicit + ']'\n  if (typeof tag !== 'string' && tag.length > 2) {\n    tag = tag.slice(0, 2).join(', #') + ' +' //truncate the list of tags\n  }\n  tag = typeof tag !== 'string' ? tag.join(', #') : tag\n  console.log(` ${yellow(word).padEnd(24)} \\x1b[32mâ†’\\x1b[0m #${tag.padEnd(22)}  ${i(reason)}`) // eslint-disable-line\n}\n\n// a faster version than the user-facing one in ./methods\nconst fastTag = function (term, tag, reason) {\n  if (!tag || tag.length === 0) {\n    return\n  }\n  if (term.frozen === true) {\n    return\n  }\n  // some logging for debugging\n  const env = typeof process === 'undefined' || !process.env ? self.env || {} : process.env\n  if (env && env.DEBUG_TAGS) {\n    log(term, tag, reason)\n  }\n  term.tags = term.tags || new Set()\n  if (typeof tag === 'string') {\n    term.tags.add(tag)\n  } else {\n    tag.forEach(tg => term.tags.add(tg))\n  }\n}\n\nexport default fastTag\n"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAG,SAAAA,CAACC,IAAI,EAAEC,GAAG,EAAkB;EAAA,IAAhBC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACjC,MAAMG,MAAM,GAAGC,GAAG,IAAI,iBAAiB,GAAGA,GAAG,GAAG,SAAS;EACzD,MAAMC,CAAC,GAAGD,GAAG,IAAI,SAAS,GAAGA,GAAG,GAAG,SAAS;EAC5C,IAAIE,IAAI,GAAGT,IAAI,CAACU,IAAI,IAAI,GAAG,GAAGV,IAAI,CAACW,QAAQ,GAAG,GAAG;EACjD,IAAI,OAAOV,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACG,MAAM,GAAG,CAAC,EAAE;IAC7CH,GAAG,GAAGA,GAAG,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,EAAC;EAC3C;EACAZ,GAAG,GAAG,OAAOA,GAAG,KAAK,QAAQ,GAAGA,GAAG,CAACY,IAAI,CAAC,KAAK,CAAC,GAAGZ,GAAG;EACrDa,OAAO,CAACf,GAAG,KAAAgB,MAAA,CAAKT,MAAM,CAACG,IAAI,CAAC,CAACO,MAAM,CAAC,EAAE,CAAC,8BAAAD,MAAA,CAAsBd,GAAG,CAACe,MAAM,CAAC,EAAE,CAAC,QAAAD,MAAA,CAAKP,CAAC,CAACN,MAAM,CAAC,CAAE,CAAC,EAAC;AAC/F,CAAC;;AAED;AACA,MAAMe,OAAO,GAAG,SAAAA,CAAUjB,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAE;EAC3C,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;IAC5B;EACF;EACA,IAAIJ,IAAI,CAACkB,MAAM,KAAK,IAAI,EAAE;IACxB;EACF;EACA;EACA,MAAMC,GAAG,GAAG,OAAOC,OAAO,KAAK,WAAW,IAAI,CAACA,OAAO,CAACD,GAAG,GAAGE,IAAI,CAACF,GAAG,IAAI,CAAC,CAAC,GAAGC,OAAO,CAACD,GAAG;EACzF,IAAIA,GAAG,IAAIA,GAAG,CAACG,UAAU,EAAE;IACzBvB,GAAG,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,CAAC;EACxB;EACAF,IAAI,CAACuB,IAAI,GAAGvB,IAAI,CAACuB,IAAI,IAAI,IAAIC,GAAG,CAAC,CAAC;EAClC,IAAI,OAAOvB,GAAG,KAAK,QAAQ,EAAE;IAC3BD,IAAI,CAACuB,IAAI,CAACE,GAAG,CAACxB,GAAG,CAAC;EACpB,CAAC,MAAM;IACLA,GAAG,CAACyB,OAAO,CAACC,EAAE,IAAI3B,IAAI,CAACuB,IAAI,CAACE,GAAG,CAACE,EAAE,CAAC,CAAC;EACtC;AACF,CAAC;AAED,eAAeV,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}